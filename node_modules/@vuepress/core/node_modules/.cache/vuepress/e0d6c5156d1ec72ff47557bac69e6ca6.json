{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/Notifications.md?vue&type=template&id=3757079b&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/Notifications.md","mtime":1617331587407},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJub3RpZmljYXRpb25zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25vdGlmaWNhdGlvbnMiPiM8L2E+IE5vdGlmaWNhdGlvbnM8L2gxPgo8cD5Ob3RpZmljYXRpb25zIHRvIG1vbml0b3IgQlRDUGF5IFNlcnZlciBldmVudHMgY2FuIGJlIGNvbmZpZ3VyZWQgaW4gc2V2ZXJhbCBkaWZmZXJlbnQgd2F5cy48L3A+Cjx1bD4KPGxpPjxhIGhyZWY9IiNub3RpZmljYXRpb24tYWxlcnRzIj5Ob3RpZmljYXRpb24gQWxlcnRzPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjc2VydmVyLWVtYWlscyI+U2VydmVyIGxldmVsIFNNVFAgKEVtYWlsKTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI3N0b3JlLWVtYWlscyI+U3RvcmUgbGV2ZWwgU01UUCAoRW1haWwpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2RvY3MuYnRjcGF5c2VydmVyLm9yZy9BUEkvR3JlZW5maWVsZC92MS8jdGFnL1dlYmhvb2tzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5TdG9yZSBsZXZlbCBXZWJob29rczxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8L3VsPgo8aDIgaWQ9Im5vdGlmaWNhdGlvbi1hbGVydHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbm90aWZpY2F0aW9uLWFsZXJ0cyI+IzwvYT4gTm90aWZpY2F0aW9uIEFsZXJ0czwvaDI+CjxwPkNsaWNrIHRoZSBub3RpZmljYXRpb24gaWNvbiBpbiB0aGUgbWFpbiBoZWFkZXIgdG8gdmlldyB0aGUgY3VycmVudCBub3RpZmljYXRpb25zLiBUaGUgbm90aWZpY2F0aW9uIHBhZ2Ugc2hvd3MgdGhlIHN0YXR1cyBvZiBhbGwgY3VycmVudCBub3RpZmljYXRpb25zIHN1Y2ggYXMgaW52b2ljZSBldmVudHMsIHBheW91dHMsIHZlcnNpb24gdXBkYXRlcywgZXRjLiBOb3RpZmljYXRpb25zIGNhbiBiZSBtYXJrZWQgYXMgc2VlbiBmcm9tIHRoZSBub3RpZmljYXRpb25zIGRyb3Bkb3duIG9yIHRoZSBub3RpZmljYXRpb25zIHBhZ2UuPC9wPgo8ZmlndXJlPjxpbWcgc3JjPSIuL2ltZy9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbi1wYWdlLnBuZyIgYWx0PSJCVENQYXkgTm90aWZpY2F0aW9ucyIgdGl0bGU9IkJUQ1BheSBOb3RpZmljYXRpb25zIj48L2ZpZ3VyZT4KPHA+RWFjaCB1c2VyIHJlZ2lzdGVyZWQgb24gdGhlIHNlcnZlciBjYW4gbWFuYWdlIHRoZSBub3RpZmljYXRpb25zIHRoZXkgcmVjZWl2ZS48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9uLW1hbmFnZS5wbmciIGFsdD0iQlRDUGF5IE1hbmFnZSBOb3RpZmljYXRpb25zIiB0aXRsZT0iQlRDUGF5IE1hbmFnZSBOb3RpZmljYXRpb25zIj48L2ZpZ3VyZT4KPGgyIGlkPSJzZXJ2ZXItZW1haWxzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NlcnZlci1lbWFpbHMiPiM8L2E+IFNlcnZlciBFbWFpbHM8L2gyPgo8cD5FbWFpbHMgY2FuIGJlIHNlbnQgZnJvbSB0aGUgc2VydmVyLWxldmVsIG9mIEJUQ1BheS4gVGhlc2UgYXJlIDxhIGhyZWY9IiN1c2VyLWVtYWlscyI+dXNlciBlbWFpbHM8L2E+LiBBZG1pbnMgY2FuIHNldHVwIHNlcnZlciBTTVRQIGluOjwvcD4KPHA+U2VydmVyIFNldHRpbmdzICZndDsgRW1haWwgc2VydmVyICZndDsgPGEgaHJlZj0iI3NtdHAtZW1haWwtc2V0dXAiPlNldHVwPC9hPjwvcD4KPGgyIGlkPSJzdG9yZS1lbWFpbHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RvcmUtZW1haWxzIj4jPC9hPiBTdG9yZSBFbWFpbHM8L2gyPgo8cD5FbWFpbHMgY2FuIGJlIHNlbnQgZnJvbSB0aGUgc3RvcmUtbGV2ZWwgb2YgQlRDUGF5LiBUaGVzZSBlbWFpbHMgYXJlIGZvciBzdG9yZSByZWxhdGVkIGV2ZW50cyBzdWNoIGFzIGludm9pY2VzLiBVc2VycyBjYW4gc2V0dXAgc3RvcmUgU01UUCBpbjo8L3A+CjxwPlN0b3JlIFNldHRpbmdzICZndDsgR2VuZXJhbCBTZXR0aW5ncyAmZ3Q7IFNlcnZpY2VzICZndDsgRW1haWwgJmd0OyA8YSBocmVmPSIjc210cC1lbWFpbC1zZXR1cCI+U2V0dXA8L2E+PC9wPgo8aDMgaWQ9InNtdHAtZW1haWwtc2V0dXAiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc210cC1lbWFpbC1zZXR1cCI+IzwvYT4gU01UUCBFbWFpbCBTZXR1cDwvaDM+CjxwPlVzZSB0aGUgUXVpY2sgZmlsbCBzZXR0aW5ncyBkcm9wZG93biBmb3IgY29tbW9ubHkgdXNlZCBlbWFpbCBjbGllbnQgc2V0dXAgcGFyYW1ldGVycy4gU2VuZCB5b3Vyc2VsZiBhIHRlc3QgZW1haWwgZnJvbSB0aGUgc2FtZSBwYWdlIHRvIHZlcmlmeSB5b3VyIHNldHVwIHBhcmFtZXRlcnMgd29yayBwcm9wZXJseS48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL3NtdHAvc210cC1zZXR1cC5wbmciIGFsdD0iQlRDUGF5IEVtYWlsIFNNVFAiIHRpdGxlPSJCVENQYXkgRW1haWwgU01UUCI+PC9maWd1cmU+CjxwPkVhY2ggZW1haWwgY2xpZW50IG1heSBoYXZlIGRpZmZlcmVudCByZXF1aXJlbWVudHMgZm9yIHNldHRpbmcgdXAgU01UUC4gRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlIHRoaXMgPFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctdG8tY29uZmlndXJlLXNtdHAtc2V0dGluZ3MtaW4tYnRjcGF5Ij5TTVRQIEZBUTwvUm91dGVyTGluaz4gb3IgcmVmZXIgdG8geW91ciBlbWFpbCBwcm92aWRlcidzIGRvY3VtZW50YXRpb24uPC9wPgo8aDEgaWQ9InVzZXItZW1haWxzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3VzZXItZW1haWxzIj4jPC9hPiBVc2VyIEVtYWlsczwvaDE+CjxwPlRoZXJlIGFyZSB2YXJpb3VzIHVzZXIgZW1haWxzIGJ1aWx0LWluIHRvIHlvdXIgQlRDUGF5IFNlcnZlciB0byBjb21tdW5pY2F0ZSB3aXRoIHlvdXIgdXNlcnMuPC9wPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgd2FybmluZyI+PHAgY2xhc3M9ImN1c3RvbS1ibG9jay10aXRsZSI+V0FSTklORzwvcD4KPHA+VXNlciBlbWFpbHMgd2lsbCBvbmx5IGJlIHNlbnQgaWYgU01UUCBpcyBlbmFibGVkIGZvciB0aGUgc2VydmVyLjwvcD4KPC9kaXY+Cjx1bD4KPGxpPjxhIGhyZWY9IiNmb3Jnb3QtcGFzc3dvcmQtZW1haWwiPkZvcmdvdCBQYXNzd29yZDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI25ldy11c2VyLWNvbmZpcm1hdGlvbi1lbWFpbCI+TmV3IFVzZXIgQ29uZmlybWF0aW9uPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjbmV3LXVzZXItaW52aXRhdGlvbi1lbWFpbCI+TmV3IFVzZXIgSW52aXRhdGlvbjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI2N1c3RvbS1lbWFpbHMiPkN1c3RvbSBFbWFpbHM8L2E+PC9saT4KPC91bD4KPGgyIGlkPSJmb3Jnb3QtcGFzc3dvcmQtZW1haWwiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZm9yZ290LXBhc3N3b3JkLWVtYWlsIj4jPC9hPiBGb3Jnb3QgUGFzc3dvcmQgRW1haWw8L2gyPgo8cD5UaGlzIGVtYWlsIGNhbiBiZSBzZW50IHRvIHVzZXJzIHdobyBoYXZlIGxvc3QgdGhlaXIgcGFzc3dvcmQuIElmIFNNVFAgaXMgbm90IGVuYWJsZWQgb24gdGhlIHNlcnZlciwgdGhlcmUgaXMgPFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNmb3Jnb3QtYnRjcGF5LWFkbWluLXBhc3N3b3JkIj5ubyBlYXN5IHdheTwvUm91dGVyTGluaz4gdG8gcmVzZXQgYW55IHVzZXIgcGFzc3dvcmRzIGluY2x1ZGluZyB0aGUgc2VydmVyIGFkbWluJ3MgcGFzc3dvcmQuIEJlIHN1cmUgdG8gc2F2ZSB5b3VyIHBhc3N3b3JkIGluIGEgc2FmZSBwbGFjZSBvciBzZXR1cCBlbWFpbCBmb3IgeW91ciBzZXJ2ZXIuPC9wPgo8aDIgaWQ9Im5ldy11c2VyLWNvbmZpcm1hdGlvbi1lbWFpbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNuZXctdXNlci1jb25maXJtYXRpb24tZW1haWwiPiM8L2E+IE5ldyBVc2VyIENvbmZpcm1hdGlvbiBFbWFpbDwvaDI+CjxwPlRoaXMgZW1haWwgaXMgdXNlZCB0byBjb25maXJtIG5ldyB1c2VyIGFjY291bnQgcmVnaXN0cmF0aW9uLiBJbiBvcmRlciB0byByZWR1Y2Ugc3BhbSBhY2NvdW50IHJlZ2lzdHJhdGlvbiwgZW1haWwgY29uZmlybWF0aW9uIG1heSBiZSByZXF1aXJlZCBieSB0aGUgc2VydmVyIGFkbWluIChzZXQgaW4gc2VydmVyIHNldHRpbmdzIHBvbGljaWVzKS4gTmV3IHVzZXJzIGNhbiBjbGljayB0aGUgbGluayBpbiB0aGlzIGVtYWlsIHRvIHZlcmlmeSB0aGVpciBhY2NvdW50IHRvIGNvbXBsZXRlIHRoZWlyIHJlZ2lzdHJhdGlvbiBwcm9jZXNzLjwvcD4KPGgyIGlkPSJuZXctdXNlci1pbnZpdGF0aW9uLWVtYWlsIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25ldy11c2VyLWludml0YXRpb24tZW1haWwiPiM8L2E+IE5ldyBVc2VyIEludml0YXRpb24gRW1haWw8L2gyPgo8cD5TZW5kIGFuIGludml0YXRpb24gZW1haWwgdG8gPFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctdG8tYWRkLWEtbmV3LXVzZXItYnktaW52aXRlIj5pbnZpdGUgYSBuZXcgdXNlcjwvUm91dGVyTGluaz4gdG8gcmVnaXN0ZXIgYW4gYWNjb3VudCBvbiB5b3VyIHNlcnZlci4gVGhpcyBjYW4gYmUgdXNlZCB0byBrZWVwIHNlcnZlciByZWdpc3RyYXRpb24gY2xvc2VkIHRvIHRoZSBwdWJsaWMgYnV0IHN0aWxsIGludml0ZSBuZXcgdXNlcnMuPC9wPgo8aDIgaWQ9ImN1c3RvbS1lbWFpbHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY3VzdG9tLWVtYWlscyI+IzwvYT4gQ3VzdG9tIEVtYWlsczwvaDI+CjxwPkN1c3RvbSBlbWFpbHMgY2FuIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIEJUQ1BheSBTZXJ2ZXIgVHJhbnNtdXRlciBwcmVzZXQgPFJvdXRlckxpbmsgdG89Ii9UcmFuc211dGVyL0VtYWlsUmVjZWlwdHNQcmVzZXQvI3RyYW5zbXV0ZXItZW1haWwtcmVjZWlwdHMtc2V0dXAiPkVtYWlsIFJlY2VpcHRzPC9Sb3V0ZXJMaW5rPi48L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}