{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/theme/components/PageEdit.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/theme/components/PageEdit.vue","mtime":1617331587390},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkByZXF1aXJlICd+QHZ1ZXByZXNzL3RoZW1lLWRlZmF1bHQvc3R5bGVzL3dyYXBwZXIuc3R5bCcKCi5wYWdlLWVkaXQKICBAZXh0ZW5kICR3cmFwcGVyCiAgcGFkZGluZy10b3AgMXJlbQogIHBhZGRpbmctYm90dG9tIDFyZW0KICBvdmVyZmxvdyBhdXRvCgogIC5lZGl0LWxpbmsKICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrCiAgICBtYXJnaW4tcmlnaHQgMXJlbQogICAgYQogICAgICBjb2xvciBsaWdodGVuKCR0ZXh0Q29sb3IsIDI1JSkKICAgICAgbWFyZ2luLXJpZ2h0IDAuMDVyZW0KICAubGFzdC11cGRhdGVkCiAgICBmbG9hdCByaWdodAogICAgZm9udC1zaXplIDAuOWVtCiAgICAucHJlZml4CiAgICAgIGZvbnQtd2VpZ2h0IDUwMAogICAgICBjb2xvciBsaWdodGVuKCR0ZXh0Q29sb3IsIDI1JSkKICAgIC50aW1lCiAgICAgIGZvbnQtd2VpZ2h0IDQwMAogICAgICBjb2xvciAjYWFhCgpAbWVkaWEgKG1heC13aWR0aDogJE1RTW9iaWxlKQogIC5wYWdlLWVkaXQKICAgIC5lZGl0LWxpbmsKICAgICAgbWFyZ2luLWJvdHRvbSAwLjVyZW0KICAgIC5sYXN0LXVwZGF0ZWQKICAgICAgZm9udC1zaXplIDAuOGVtCiAgICAgIGZsb2F0IG5vbmUKICAgICAgdGV4dC1hbGlnbiBsZWZ0Cg=="},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"docs/.vuepress/theme/components","sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div\n      v-if=\"editLink\"\n      class=\"edit-link\"\n    >\n      <a\n        :href=\"editLink\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{{ editLinkText }}</a>\n      <OutboundLink />\n    </div>\n\n    <div\n      v-if=\"notSatisfiedLink\"\n      class=\"edit-link\"\n    >\n      <a\n        :href=\"notSatisfiedLink\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{{ notSatisfiedLinkText }}</a>\n      <OutboundLink />\n    </div>\n\n    <div\n      v-if=\"lastUpdated\"\n      class=\"last-updated\"\n    >\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\n      <span class=\"time\">{{ lastUpdated }}</span>\n    </div>\n  </footer>\n</template>\n\n<script>\nimport isNil from 'lodash/isNil'\nimport { endingSlashRE, outboundRE } from '@vuepress/theme-default/util'\n\nexport default {\n  name: 'PageEdit',\n\n  computed: {\n    lastUpdated () {\n      return this.$page.lastUpdated\n    },\n\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n\n    editLink () {\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\n        ? this.$site.themeConfig.editLinks\n        : this.$page.frontmatter.editLink\n\n      const {\n        repo,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      if (showEditLink) {\n        if (typeof this.$page.frontmatter.editLink === 'string') {\n          return this.$page.frontmatter.editLink\n        } else if (docsRepo && this.$page.relativePath) {\n          return this.createEditLink(\n            repo,\n            docsRepo,\n            docsDir,\n            docsBranch,\n            this.$page.relativePath\n          )\n        }\n      }\n      return null\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText\n        || this.$site.themeConfig.editLinkText\n        || `Edit this page`\n      )\n    },\n\n    notSatisfiedLink () {\n      const showNotSatisfiedLink = isNil(this.$page.frontmatter.notSatisfiedLink)\n        ? this.$site.themeConfig.notSatisfiedLinks\n        : this.$page.frontmatter.notSatisfiedLink\n\n      const {\n        repo,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      if (showNotSatisfiedLink && docsRepo && this.$page.relativePath) {\n        return this.createNotSatisfiedLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        )\n      }\n      return null\n    },\n\n    notSatisfiedLinkText () {\n      return (\n        this.$themeLocaleConfig.notSatisfiedLinkText\n        || this.$site.themeConfig.notSatisfiedLinkText\n        || `Didn't find an answer?`\n      )\n    }\n  },\n\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '')\n        + `/edit`\n        + `/${docsBranch}/`\n        + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n        + path\n      )\n    },\n\n    createNotSatisfiedLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const title = encodeURIComponent(`Improve ${this.$page.title}`)\n      const body = encodeURIComponent(`I could not find the information I was looking for on the \"${this.$page.title}\" page (\\`${this.$page.path}\\`).\\n\\n[PLEASE DESCRIBE HOW THE PAGE CAN BE IMPROVED]`)\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '')\n        + `/issues/new?title=${title}&body=${body}&labels=question`\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@require '~@vuepress/theme-default/styles/wrapper.styl'\n\n.page-edit\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n\n  .edit-link\n    display inline-block\n    margin-right 1rem\n    a\n      color lighten($textColor, 25%)\n      margin-right 0.05rem\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color lighten($textColor, 25%)\n    .time\n      font-weight 400\n      color #aaa\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom 0.5rem\n    .last-updated\n      font-size 0.8em\n      float none\n      text-align left\n</style>\n"]}]}