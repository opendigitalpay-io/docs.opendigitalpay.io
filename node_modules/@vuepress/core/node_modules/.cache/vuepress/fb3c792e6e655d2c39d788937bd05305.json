{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/RegisterAccount.md?vue&type=template&id=1875d3b9&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/RegisterAccount.md","mtime":1617331587410},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICIxLXJlZ2lzdGVyLWFjY291bnQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIzEtcmVnaXN0ZXItYWNjb3VudCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiICgxKSBSZWdpc3RlciBhY2NvdW50IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhpcyBwYWdlIHJlbGF0ZXMgdG8gcmVnaXN0ZXJpbmcgYW4gYWNjb3VudCBvbiBhIEJUQ1BheSBTZXJ2ZXIgaW5zdGFuY2Ugb2YgeW91ciBvd24sIG9yIHVzaW5nIGEgdGhpcmQtcGFydHkgaG9zdC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiVG8gcmVnaXN0ZXIgYSBkZW1vIGFjY291bnQsIHZpc2l0IHRoZSAiKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly9tYWlubmV0LmRlbW8uYnRjcGF5c2VydmVyLm9yZy9BY2NvdW50L0xvZ2luIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJvZmZpY2lhbCBkZW1vIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICBbCiAgICAgICAgICBfdm0uX3YoIlRvIGRlcGxveSBhbiBpbnN0YW5jZSBvZiB5b3VyIG93biwgc2VlICIpLAogICAgICAgICAgX2MoIlJvdXRlckxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL0RlcGxveW1lbnQvIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJjaG9vc2luZyBhIGRlcGxveW1lbnQgbWV0aG9kIikKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIuIikKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBIG5vbi1leGhhdXN0aXZlIGxpc3Qgb2YgdGhpcmQtcGFydHkgaG9zdHMgY2FuIGJlIGZvdW5kIG9uIHRoZSBCVENQYXkgU2VydmVyICIKICAgICAgICApLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL2RpcmVjdG9yeS5idGNwYXlzZXJ2ZXIub3JnL2ZpbHRlci9ob3N0cyIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiZGlyZWN0b3J5IiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJhY2NvdW50LXJlZ2lzdHJhdGlvbiIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjYWNjb3VudC1yZWdpc3RyYXRpb24iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBBY2NvdW50IFJlZ2lzdHJhdGlvbiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZSBmaXJzdCBzdGVwIGluIHNldHRpbmcgdXAgeW91ciBCVENQYXkgU2VydmVyIGlzIGNyZWF0aW5nIGEgdXNlciBhY2NvdW50LiBUaGUgIgogICAgICAgICksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoImZpcnN0IGNyZWF0ZWQgYWNjb3VudCIpXSksCiAgICAgICAgX3ZtLl92KCIgb24gYSBuZXdseS1kZXBsb3llZCBCVENQYXkgU2VydmVyIGlzIGF1dG9tYXRpY2FsbHkgLSAiKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiYWRtaW4iKV0pLAogICAgICAgIF92bS5fdigiLiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgInAiLAogICAgICAgIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgJ1RvIHJlZ2lzdGVyLCB2aXNpdCB5b3VyIEJUQ1BheSBTZXJ2ZXIgVVJMIGFuZCBmaWxsIGluIHRoZSBhY2NvdW50IHJlZ2lzdHJhdGlvbiBmb3JtIG9uIHRoZSByaWdodC4gSW5wdXQgeW91ciBwYXNzd29yZCwgcGFzc3dvcmQgY29uZmlybWF0aW9uLCBlLW1haWwgYW5kIGNsaWNrICJSZWdpc3RlciIuIFlvdSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgbG9nZ2VkIGluLiBJZiB5b3VcJ3JlIHVzaW5nIGEgJwogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJSb3V0ZXJMaW5rIiwgeyBhdHRyczogeyB0bzogIi9UaGlyZFBhcnR5SG9zdGluZy8iIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoInRoaXJkLXBhcnR5IGhvc3QiKQogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIsIHlvdSBtYXkgYmUgYXNrZWQgdG8gdmVyaWZ5IHlvdXIgZS1tYWlsIGFkZHJlc3MgdG8gY29uZmlybSB0aGUgcmVnaXN0cmF0aW9uLiIKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJmaWd1cmUiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi9pbWcvYnRjcGF5LXJlZ2lzdHJhdGlvbi1wYWdlLmpwZyIpLAogICAgICAgICAgICBhbHQ6ICJCVENQYXkgU2VydmVyIHJlZ2lzdHJhdGlvbiIsCiAgICAgICAgICAgIHRpdGxlOiAiQlRDUGF5IFNlcnZlciByZWdpc3RyYXRpb24iCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiY29uZmlndXJpbmctZS1tYWlsIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNjb25maWd1cmluZy1lLW1haWwiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBDb25maWd1cmluZyBlLW1haWwiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICBbCiAgICAgICAgICBfdm0uX3YoIkl0J3MgcmVjb21tZW5kZWQgdGhhdCBzZXJ2ZXIgYWRtaW5zICIpLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJSb3V0ZXJMaW5rIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICB0bzoKICAgICAgICAgICAgICAgICAgIi9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctdG8tY29uZmlndXJlLXNtdHAtc2V0dGluZ3MtaW4tYnRjcGF5IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiY29uZmlndXJlIFNNVFAgc2V0dGluZ3MiKV0KICAgICAgICAgICksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIuIEUtbWFpbCBzZXR1cCBlbmFibGVzIGVhc2llciBwYXNzd29yZCByZXNldCBmb3IgdGhlIGluc3RhbmNlIHVzZXJzIGluIGNhc2Ugb2YgZm9yZ290dGVuIGNyZWRlbnRpYWxzLiIKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUbyBhbGxvdyBvdGhlciB1c2VycyB0byBhY2Nlc3MgeW91ciBzZXJ2ZXIsIHlvdSBuZWVkIHRvIGVuYWJsZSByZWdpc3RyYXRpb24gaW4gU2VydmVyIFNldHRpbmdzID4gUG9saWNpZXMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAidHdvLWZhY3Rvci1hdXRoZW50aWNhdGlvbiIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjdHdvLWZhY3Rvci1hdXRoZW50aWNhdGlvbiIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFR3by1mYWN0b3IgYXV0aGVudGljYXRpb24iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJGb3IgZnVydGhlciBlbmhhbmNpbmcgc2VjdXJpdHkgYW5kIHByb3RlY3RpbmcgeW91ciBhY2NvdW50LCBpdCdzIHJlY29tbWVuZGVkIHRvIGVuYWJsZSB0d28tZmFjdG9yIGF1dGhlbnRpY2F0aW9uIChib3RoIDJGQSBhbmQgVTJGIGFyZSBzdXBwb3J0ZWQpLiBUbyBlbmFibGUgMkZBIG9yIFUyRiwgY2xpY2sgb24gdGhlIHVzZXIgc2V0dGluZyBpY29uIGluIHRoZSBoZWFkZXIgbWVudS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJlbSIsIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAic3Ryb25nIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS5fdigiUHJvY2VlZCB0byB0aGUgbmV4dCBzdGVwIC0gIiksCiAgICAgICAgICAgICAgX2MoIlJvdXRlckxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL0NyZWF0ZVN0b3JlLyIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIkNyZWF0aW5nIGEgc3RvcmUiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fdigiLiIpCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}