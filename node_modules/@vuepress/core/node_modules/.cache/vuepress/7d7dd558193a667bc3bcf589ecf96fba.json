{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/Transmuter/EmailReceiptsPreset.md?vue&type=template&id=9e750f22&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/Transmuter/EmailReceiptsPreset.md","mtime":1617331802187},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJidGNwYXktZW1haWwtcmVjZWlwdHMtdGlja2V0LXNhbGUtZ3VpZGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYnRjcGF5LWVtYWlsLXJlY2VpcHRzLXRpY2tldC1zYWxlLWd1aWRlIj4jPC9hPiBCVENQYXkgRW1haWwgUmVjZWlwdHMgLSBUaWNrZXQgU2FsZSBHdWlkZTwvaDE+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL0Zyb250UGFnZS5wbmciIGFsdD0iRnJvbnRQYWdlIj48L2ZpZ3VyZT4KPHA+VGhpcyBndWlkZSBzaG93cyBob3cgdG8gc2V0dXAgYSBzaW1wbGUgZXZlbnQgdGlja2V0IHNhbGUgc3lzdGVtLCB1c2luZyB0aGUgPHN0cm9uZz5CVENQYXkgRW1haWwgUmVjZWlwdHM8L3N0cm9uZz4gcHJlc2V0IGluIFRyYW5zbXV0ZXIuPC9wPgo8cD5UcmFuc211dGVyIGlzIGN1cnJlbnRseSBpbiA8ZW0+YWxwaGEgc3RhdGU8L2VtPiwgYnV0IHRoaXMgcHJlc2V0IHJlbGllcyBtYWlubHkgb24gc2VuZGluZyBlbWFpbHMsIHNvIGl0J3MgZmFpcmx5IGVhc3kgdG8gdXNlIHdpdGggeW91ciBCVENQYXksIGV2ZW4gaWYgeW91IGFyZSBub3QgYSBkZXZlbG9wZXIuIFdoYXQgeW91IHdpbGwgbmVlZCBpbiBhZGRpdGlvbiB0byBUcmFuc211dGVyIGlzLCBhIEJUQ1BheVNlcnZlciBpbnN0YW5jZSB3aXRoIGF0IGxlYXN0IG9uZSBzdG9yZSBhbmQgYSBmZXcgZW1haWwgYWNjb3VudHMgZm9yIHRlc3RpbmcgeW91ciB0aWNrZXRpbmcgc2V0dXAuIFRoaXMgZ3VpZGUgaXMgdXNpbmcgR21haWwgZm9yIHNpbXBsaWNpdHksIGFsdGhvdWdoIG90aGVyIGVtYWlsIGNsaWVudHMgY2FuIGJlIHVzZWQuPC9wPgo8aDIgaWQ9Imhvdy10aGUtdGlja2V0LXNhbGUtc3lzdGVtLXdvcmtzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10aGUtdGlja2V0LXNhbGUtc3lzdGVtLXdvcmtzIj4jPC9hPiBIb3cgdGhlIFRpY2tldCBTYWxlIFN5c3RlbSBXb3JrczwvaDI+CjxwPkNyZWF0ZSBhIHNpbXBsZSBCVENQYXkgUG9pbnQgT2YgU2FsZSBBcHAgdGhhdCBzZWxscyB0aWNrZXRzIGZvciBhIGZ1dHVyZSBldmVudCB3aXRoIGxpbWl0ZWQgcXVhbnRpdHkuCldoZW4gc29tZW9uZSBwdXJjaGFzZXMgYSB0aWNrZXQgaW4gdGhlIGNvbm5lY3RlZCBCVENQYXlTZXJ2ZXIgUE9TIEFwcCwgc2VuZCB0aGUgY3VzdG9tZXIgYW4gZW1haWwgcmVjZWlwdCBjb250YWluaW5nIHRoZWlyIFFSIGNvZGUgZXZlbnQgdGlja2V0IGFuZCBzZW5kIGFuIGVtYWlsIHJlY2VpcHQgdG8gdGhlIGV2ZW50IG9yZ2FuaXplciwgYWxlcnRpbmcgb2YgdGhlIHRpY2tldCBzYWxlIGFuZCB0aGUgcGF5bWVudCBkZXRhaWxzLjwvcD4KPGgyIGlkPSJidGNwYXktcG9zLWFwcC1zZXR1cCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNidGNwYXktcG9zLWFwcC1zZXR1cCI+IzwvYT4gQlRDUGF5IFBPUyBBcHAgU2V0dXA8L2gyPgo8cD5GaXJzdCBjcmVhdGUgYSBQb2ludCBvZiBTYWxlIEFwcCBpbiBCVENQYXlTZXJ2ZXIgY2FsbGVkICZxdW90O1RpY2tldCBBcHAmcXVvdDsgd2l0aCBvbmUgcHJvZHVjdCAob3VyIGV2ZW50IHRpY2tldCksIHdoaWNoIGhhcyBhbiBpbnZlbnRvcnkgbGltaXQgb2YgcXVhbnRpdHkgMzAuPC9wPgo8ZmlndXJlPjxpbWcgc3JjPSIuL2ltZy9UaWNrZXRBcHAucG5nIiBhbHQ9IlRpY2tldEFwcCI+PC9maWd1cmU+CjxoMiBpZD0idHJhbnNtdXRlci1lbWFpbC1yZWNlaXB0cy1zZXR1cCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN0cmFuc211dGVyLWVtYWlsLXJlY2VpcHRzLXNldHVwIj4jPC9hPiBUcmFuc211dGVyIEVtYWlsIFJlY2VpcHRzIFNldHVwPC9oMj4KPHA+SW4gb3VyIFRyYW5zbXV0ZXIgY3JlYXRlIGEgUHJlc2V0ICZndDsgQlRDUGF5IEVtYWlsIFJlY2VpcHRzLjwvcD4KPGZpZ3VyZT48aW1nIHNyYz0iLi9pbWcvUHJlc2V0cy5wbmciIGFsdD0iUHJlc2V0cyI+PC9maWd1cmU+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL0V4dGVybmFsU2VydmljZV9TZXR1cC5wbmciIGFsdD0iRXh0ZXJuYWxTZXJ2aWNlX1NldHVwIj48L2ZpZ3VyZT4KPHA+TmV4dCwgY29ubmVjdCBvdXIgQlRDUGF5IGFzIGFuIGV4dGVybmFsIHNlcnZpY2UgdG8gVHJhbnNtdXRlci48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL0NyZWF0ZUV4dGVybmFsU2VydmljZV9CVENQYXkucG5nIiBhbHQ9IkNyZWF0ZUJUQ1BheVNlcnZpY2UiPjwvZmlndXJlPgo8cD5OZXh0IG9idGFpbiBhIHBhaXJpbmcgY29kZSBmcm9tIG91ciBCVENQYXkuIFNvIFRyYW5zbXV0ZXIgY2FuIHNlbmQgZW1haWxzIHdoZW4gQlRDUGF5IFBPUyBpbnZvaWNlcyBhcmUgcGFpZC48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL1NJTl9QYWlyaW5nQ29kZS5qcGciIGFsdD0iU0lOX1BhaXJpbmdDb2RlIj48L2ZpZ3VyZT4KPHA+T25jZSBwYWlyaW5nIGlzIHN1Y2Nlc3NmdWwgc2hvd3MgaW4geW91ciBCVENQYXksIGdvIGJhY2sgdG8gVHJhbnNtdXRlciBwcmVzcyBTYXZlIHRvIGF1dGhvcml6ZSB5b3VyIEJUQ1BheSBjbGllbnQgY29ubmVjdGlvbi48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL0V4dGVybmFsU2VydmljZV9BZGQucG5nIiBhbHQ9IkV4dGVybmFsU2VydmljZV9BZGQiPjwvZmlndXJlPgo8cD5OZXh0IGNyZWF0ZSBhbiBlbWFpbCBzZW5kaW5nIFNNVFAgc2VydmljZS48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL0NyZWF0ZUV4dGVybmFsU2VydmljZV9TTVRQLnBuZyIgYWx0PSJDcmVhdGVFeHRlcm5hbFNlcnZpY2VfU01UUCI+PC9maWd1cmU+CjxwPlNlZSB0aGlzIDxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jaG93LXRvLWNvbmZpZ3VyZS1zbXRwLXNldHRpbmdzLWluLWJ0Y3BheSI+U01UUCBzZXR0aW5ncyBleGFtcGxlPC9Sb3V0ZXJMaW5rPiBmb3Igc2V0dXAuIFNhdmUgYWZ0ZXIgZGF0YSBpcyB1cGRhdGVkLCBhbmQgcmV0dXJuIHRvIHByZXNldCBvZiBFbWFpbCBGb3J3YXJkZXIuPC9wPgo8ZmlndXJlPjxpbWcgc3JjPSIuL2ltZy9JbnZvaWNlU3RhdHVzVHJpZ2dlci5wbmciIGFsdD0iSW52b2ljZVN0YXR1c1RyaWdnZXIiPjwvZmlndXJlPgo8cD5DaG9vc2UgdGhlIGludm9pY2Ugc3RhdHVzIHRvIHNlbmQgdGlja2V0IGVtYWlsIHJlY2VpcHRzIG9uLiBEdXJpbmcgdGVzdGluZywgdXNlIHRoZSA8c3Ryb25nPk5ldzwvc3Ryb25nPiBpbnZvaWNlIHN0YXR1cywgc28gdGhhdCBwYXltZW50IGlzIG5vdCByZXF1aXJlZCB0byBzZW5kIGVtYWlscy4gT25jZSBldmVyeXRoaW5nIGlzIHNldHVwIGNvcnJlY3RseSBhbmQgd29ya2luZyBwcm9wZXJseSwgY2hvb3NlIGEgc3RhdHVzIGxpa2UgPFJvdXRlckxpbmsgdG89Ii9JbnZvaWNlcy8iPlBhaWQgb3IgQ29uZmlybWVkPC9Sb3V0ZXJMaW5rPi48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL1NlbmRFbWFpbFRvQ3VzdG9tZXJFbWFpbC5wbmciIGFsdD0iU2VuZEVtYWlsVG9DdXN0b21lckVtYWlsIj48L2ZpZ3VyZT4KPHA+U2VsZWN0IHNlbmQgZW1haWwgdG8gdGhlIGFkZHJlc3MgcmVnaXN0ZXJlZCBvbiB0aGUgQlRDUGF5IEludm9pY2UuIEJlIHN1cmUgdGhhdCB0aGUgcmVmdW5kIGVtYWlsIHNldHRpbmcgaGFzIG5vdCBiZWVuIDxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TdG9yZXMvI2hvdy10by1kaXNhYmxlLWVtYWlsLW9uLWludm9pY2VzIj5kaXNhYmxlZDwvUm91dGVyTGluaz4gaW4geW91ciBCVENQYXkgc3RvcmUsIGluIG9yZGVyIHRvIHByb21wdCBjdXN0b21lcnMgdG8gcHJvdmlkZSB0aGVpciBlbWFpbCBiZWZvcmUgcGF5aW5nIHRoZSBpbnZvaWNlLjwvcD4KPHA+TmV4dCBzdXBwbHkgdGhlIHNlbmRpbmcgZW1haWwgYWRkcmVzcywgZW1haWwgc3ViamVjdCBhbmQgZW1haWwgYm9keS4gTm90ZSB0aGUgaGlnaGxpZ2h0ZWQgbGluZSBpbiB0aGUgcGljdHVyZSBiZWxvdywgaXQgdXNlcyBodHRwOi8vZ29xci5tZS9hcGkgdG8gY3JlYXRlIGEgUVIgY29kZSBvZiB0aGUgaW52b2ljZSBwYXltZW50IHdoaWNoIHdpbGwgYmUgdXNlZCBhcyB0aGUgZXZlbnQgdGlja2V0IGluc2lkZSB0aGUgY3VzdG9tZXIncyByZWNlaXB0IGVtYWlsLjwvcD4KPGZpZ3VyZT48aW1nIHNyYz0iLi9pbWcvQ3VzdG9tZXJFbWFpbEJvZHkucG5nIiBhbHQ9IkN1c3RvbWVyRW1haWxCb2R5Ij48L2ZpZ3VyZT4KPHA+QWZ0ZXIgc2F2aW5nLCB0aGVyZSB3aWxsIGJlIGEgcmVjaXBlIHdoaWNoIGhhcyBiZWVuIGdlbmVyYXRlZCBieSB0aGUgcHJlc2V0LiBJbiB0aGUgYWN0aW9uIGdyb3VwLCB0aGVyZSB3aWxsIGJlIG9uZSBlbWFpbCBmb3IgdGhlIGN1c3RvbWVyLiBOZXh0LCBhZGQgYSBzZWNvbmQgZW1haWwgdG8gbm90aWZ5IHRoZSBvd25lciBvZiB0aGUgdGlja2V0IHNhbGUuIFRoaXMgaXMgYWxzbyBpbXBvcnRhbnQgaW4gY2FzZSB0aGUgY3VzdG9tZXIgcHJvdmlkZXMgYW4gaW5jb3JyZWN0IGVtYWlsLCB0aGUgZXZlbnQgb3JnYW5pemVyIHdpbGwgc3RpbGwgcmVjZWl2ZSB0aGVpciBwYXltZW50IGluZm9ybWF0aW9uLjwvcD4KPGZpZ3VyZT48aW1nIHNyYz0iLi9pbWcvRW1wbG95ZWVFbWFpbC5wbmciIGFsdD0iRW1wbG95ZWVFbWFpbCI+PC9maWd1cmU+CjxwPkFkZCB5b3VyIHNlY29uZCBlbWFpbCBhY2NvdW50IGRldGFpbHMsIGVtYWlsIHN1YmplY3QgYW5kIEhUTUwgZW1haWwgYm9keS4gTm90ZSBzb21lIG9mIHRoZSBwdXJjaGFzZSBkYXRhIHlvdSBjYW4gaW5zZXJ0IGludG8gdGhlIGV2ZW50IG9yZ2FuaXplciBlbWFpbCByZWNlaXB0LiBQcmVzcyBzYXZlLjwvcD4KPHA+QmUgc3VyZSB0byBlbmFibGUgeW91ciByZWNpcGUgKGNoZWNrYm94KS48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4vaW1nL0ZpbmFsUmVjaXBlVmlldy5wbmciIGFsdD0iRmluYWxSZWNpcGVWaWV3Ij48L2ZpZ3VyZT4KPHA+T25jZSB0aGUgcmVjaXBlIGlzIDxzdHJvbmc+ZW5hYmxlZDwvc3Ryb25nPiwgc3RhcnQgY3JlYXRpbmcgaW52b2ljZXMgaW4gdGhlIEJUQ1BheSBQT1MgVGlja2V0IEFwcCBhbmQgc2VlIHRoZSBlbWFpbHMgc2VudC4gUHJvdmlkaW5nIGEgdmFsaWQgZW1haWwgaW4gdGhlIFBPUyBpbnZvaWNlIGNyZWF0aW9uIHByb2Nlc3Mgd2lsbCBzZW5kIGFuIGV2ZW50IHRpY2tldCBlbWFpbCByZWNlaXB0IHRvIHRoZSBjdXN0b21lciBhbmQgYSBwYXltZW50IGVtYWlsIHRvIHRoZSBldmVudCBvcmdhbml6ZXIuPC9wPgo8cD5XaGVuIHRoZSBRUiBjb2RlIGNvbnRhaW5lZCBpbiB0aGUgY3VzdG9tZXIgZW1haWwgaXMgc2Nhbm5lZCAod2l0aCBwaG9uZSBjYW1lcmEgZm9yIGV4YW1wbGUpLCBpdCB3aWxsIGxlYWQgdG8gdGhlIEJUQ1BheSBpbnZvaWNlIHBhZ2UgdG8gdmVyaWZ5IHRoZSB0aWNrZXQgYXQgeW91ciBldmVudC48L3A+CjxwPkJlbG93IGlzIGEgYmFzaWMgSFRNTCBlbWFpbCB0ZW1wbGF0ZSB0aGF0IHRoZSBjdXN0b21lciB3b3VsZCByZWNlaXZlIGFuZCBhIGJhc2ljIEhUTUwgZW1haWwgdGVtcGxhdGUgdGhhdCB0aGUgZXZlbnQgb3JnYW5pemVyIHdvdWxkIHJlY2VpdmUsIHdpdGggc29tZSBpbnZvaWNlIGRhdGEgZnJvbSB0aGUgdGltZSBvZiBwdXJjaGFzZS4gRmVlbCBmcmVlIHRvIGltcHJvdmUgdGhlc2UgZGVtbyA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnRjcGF5c2VydmVyL2J0Y1RyYW5zbXV0ZXIvdHJlZS9tYXN0ZXIvZG9jcy90ZW1wbGF0ZXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnRlbXBsYXRlczxPdXRib3VuZExpbmsvPjwvYT4uPC9wPgo8cD48aW1nIHNyYz0iLi9pbWcvUmVjZWl2ZWRDdXN0b21lckVtYWlsQm9keS5wbmciIGFsdD0iUmVjZWl2ZWRDdXN0b21lckVtYWlsQm9keSI+CjxpbWcgc3JjPSIuL2ltZy9FbXBsb3llZUVtYWlsQm9keS5qcGciIGFsdD0iRW1wbG95ZWVFbWFpbEJvZHkiPjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}