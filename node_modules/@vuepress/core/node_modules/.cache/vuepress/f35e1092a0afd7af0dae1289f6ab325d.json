{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/Contribute/ContributeDev/ContributeDevTest.md?vue&type=template&id=354872d6&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/Contribute/ContributeDev/ContributeDevTest.md","mtime":1617331587395},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJ0ZXN0aW5nLWJ0Y3BheS1zZXJ2ZXIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdGVzdGluZy1idGNwYXktc2VydmVyIj4jPC9hPiBUZXN0aW5nIEJUQ1BheSBTZXJ2ZXI8L2gxPgo8cD5UZXN0aW5nIHRoZSBzb2Z0d2FyZSBpcyBhIGdyZWF0IHdheSB0byBjb250cmlidXRlIHRvIHRoZSBwcm9qZWN0LiBUaGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgd2F5cyB0aGF0IHNvbWVvbmUgY2FuIDxlbT50ZXN0PC9lbT4gdGhlIHNvZnR3YXJlLiBVc2VycyB3aG8gbWFudWFsbHkgdGVzdCAoUUEpIHRoZSBzb2Z0d2FyZSBhbmQgZmVhdHVyZXMgdG8gcHJvdmlkZSB1c2VyIGV4cGVyaWVuY2UsIGZlZWRiYWNrIG9yIGJ1Z3MgdG8gdGhlIHByb2plY3QgZGV2ZWxvcGVycyBhbmQgZGVzaWduZXJzIGlzIGFsd2F5cyBhcHByZWNpYXRlZC48L3A+CjxwPlNpbmNlIHRoZSBzb2Z0d2FyZSBpcyBvcGVuIHNvdXJjZSwgYW55b25lIGNhbiB0ZXN0IGFuZCBhdWRpdCB0aGUgY29kZS4gU29tZSBtZXJjaGFudHMgb3Igb3RoZXIgdGVjaG5pY2FsIHVzZXJzIG1heSB3YW50IHZlcmlmeSBuZXcgb3IgZXhpc3RpbmcgZmVhdHVyZXMgYnkgdGVzdGluZyB0aGUgc29mdHdhcmUgdGhlbXNlbHZlcy4gRGV2ZWxvcGVycyB3b3JraW5nIG9uIHRoZSBjb2RlIGNhbiBhbHNvIGJlbmVmaXQgZnJvbSB1bmRlcnN0YW5kaW5nIGhvdyB0byBtYW51YWxseSB0ZXN0IGNlcnRhaW4gYWN0aW9ucyBpbiBCVENQYXkuPC9wPgo8cD5UaGlzIGd1aWRlIHdpbGwgc2hvdyB5b3UgaG93IHRvIG1hbnVhbGx5IHRlc3Qgc29tZSBjb21tb24gQlRDUGF5IGZlYXR1cmVzIGFuZCBhc3N1bWVzIHlvdSBhbHJlYWR5IGhhdmUgeW91ciA8Um91dGVyTGluayB0bz0iL0NvbnRyaWJ1dGUvQ29udHJpYnV0ZURldi9Db250cmlidXRlRGV2Q29kZS8iPkxvY2FsIERldmVsb3BtZW50IEVudmlyb25tZW50PC9Sb3V0ZXJMaW5rPiBzZXQgdXAuIE9uY2UgeW91IHVuZGVyc3RhbmQgdGhlIGJhc2ljIHRlc3RpbmcgYWN0aW9ucywgbW9zdCBvdGhlciBmZWF0dXJlcyBjYW4gYmUgbWFudWFsbHkgdGVzdGVkIGluIGEgc2ltaWxhciB3YXkuPC9wPgo8dWw+CjxsaT48YSBocmVmPSIjdGVzdGluZy1idGNwYXktc2VydmVyIj5UZXN0aW5nIEJUQ1BheSBTZXJ2ZXI8L2E+Cjx1bD4KPGxpPjxhIGhyZWY9IiNzZXR1cC1yZWd0ZXN0LW5ldHdvcmstbG9jYWwtYnRjcGF5LXNlcnZlciI+U2V0dXAgUmVndGVzdCBOZXR3b3JrIGFuZCBMb2NhbCBCVENQYXkgU2VydmVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjdXNpbmctZG9ja2VyLWltYWdlcy1mb3ItbWFpbm5ldC10ZXN0aW5nIj5Vc2luZyBEb2NrZXIgSW1hZ2VzIGZvciBNYWlubmV0IFRlc3Rpbmc8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNjcmVhdGUtaW52b2ljZSI+Q3JlYXRlIEludm9pY2U8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNwYXktaW52b2ljZSI+UGF5IEludm9pY2U8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiN0ZXN0ZXJzLWZhcSI+VGVzdGVycyBGQVE8L2E+Cjx1bD4KPGxpPjxhIGhyZWY9IiNzdGFydC1kZWJ1Z2dpbmctZ2l2ZXMtZXJyb3Itbm8tY29ubmVjdGlvbi1jb3VsZC1iZS1tYWRlLWJlY2F1c2UtdGhlLXRhcmdldC1tYWNoaW5lLWFjdGl2ZWx5LXJlZnVzZWQtaXQtMTI3MDAxMzkzNzIiPlN0YXJ0IERlYnVnZ2luZyBnaXZlcyBFcnJvcjogTm8gY29ubmVjdGlvbiBjb3VsZCBiZSBtYWRlIGJlY2F1c2UgdGhlIHRhcmdldCBtYWNoaW5lIGFjdGl2ZWx5IHJlZnVzZWQgaXQuIDEyNy4wLjAuMTozOTM3MjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI3JlZ3Rlc3QtcGF5bWVudHMtYXJlLW5vdC1zaG93aW5nLWFzLWNvbmZpcm1lZCI+UmVndGVzdCBwYXltZW50cyBhcmUgbm90IHNob3dpbmcgYXMgY29uZmlybWVkPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjd2hpY2gtYnJhbmNoLXNob3VsZC1iZS10ZXN0ZWQtZm9yLW1ham9yLXJlbGVhc2VzIj5XaGljaCBicmFuY2ggc2hvdWxkIGJlIHRlc3RlZCBmb3IgbWFqb3IgcmVsZWFzZXM/PC9hPjwvbGk+CjxsaT48YSBocmVmPSIjY2FuLWktbWFyay1hbi1pbnZvaWNlLWFzLXBhaWQiPkNhbiBJIG1hcmsgYW4gaW52b2ljZSBhcyBwYWlkPzwvYT48L2xpPgo8L3VsPgo8L2xpPgo8L3VsPgo8L2xpPgo8L3VsPgo8aDIgaWQ9InNldHVwLXJlZ3Rlc3QtbmV0d29yay1hbmQtbG9jYWwtYnRjcGF5LXNlcnZlciI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzZXR1cC1yZWd0ZXN0LW5ldHdvcmstYW5kLWxvY2FsLWJ0Y3BheS1zZXJ2ZXIiPiM8L2E+IFNldHVwIFJlZ3Rlc3QgTmV0d29yayBhbmQgTG9jYWwgQlRDUGF5IFNlcnZlcjwvaDI+CjxwPkZpcnN0LCBiZSBzdXJlIHlvdSBoYXZlIGNvbXBsZXRlZCB0aGUgZm9sbG93aW5nOjwvcD4KPHVsPgo8bGk+T3B0aW9uIDE6IFRlc3QgdGhlIGxhdGVzdCBjb2RlIC0gPFJvdXRlckxpbmsgdG89Ii9Db250cmlidXRlL0NvbnRyaWJ1dGVEZXYvQ29udHJpYnV0ZURldkNvZGUvI3N5bmMtZm9ya2VkLWJ0Y3BheXNlcnZlci1yZXBvc2l0b3J5Ij5QdWxsIG1hc3RlcjwvUm91dGVyTGluaz48L2xpPgo8bGk+T3B0aW9uIDI6IFRlc3QgYSBuZXcgZmVhdHVyZSAtIDxSb3V0ZXJMaW5rIHRvPSIvQ29udHJpYnV0ZS9Db250cmlidXRlRGV2L0NvbnRyaWJ1dGVEZXZDb2RlLyNjcmVhdGUtYS1icmFuY2gtb2YtYS1wdWxsLXJlcXVlc3QiPlB1bGwgcmVxdWVzdDwvUm91dGVyTGluaz48L2xpPgo8bGk+Q3JlYXRlZCBhIGxvY2FsIDxSb3V0ZXJMaW5rIHRvPSIvQ29udHJpYnV0ZS9Db250cmlidXRlRGV2L0NvbnRyaWJ1dGVEZXZDb2RlLyNiaXRjb2luLXJlZ3Rlc3QtbmV0d29yay1zZXR1cCI+UmVndGVzdCBOZXR3b3JrPC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT5CdWlsdCB5b3VyIHNvbHV0aW9uIGFuZCBzdGFydGVkIDxSb3V0ZXJMaW5rIHRvPSIvQ29udHJpYnV0ZS9Db250cmlidXRlRGV2L0NvbnRyaWJ1dGVEZXZDb2RlLyNidWlsZC1sb2NhbC1idGNwYXlzZXJ2ZXItaW4tYnJvd3Nlci1tb2RlIj5Ccm93c2VyIG1vZGU8L1JvdXRlckxpbms+IG9yIDxSb3V0ZXJMaW5rIHRvPSIvQ29udHJpYnV0ZS9Db250cmlidXRlRGV2L0NvbnRyaWJ1dGVEZXZDb2RlLyNidWlsZC1sb2NhbC1idGNwYXlzZXJ2ZXItaW4tZGVidWctbW9kZSI+RGVidWcgbW9kZTwvUm91dGVyTGluaz48L2xpPgo8L3VsPgo8aDIgaWQ9InVzaW5nLWRvY2tlci1pbWFnZXMtZm9yLW1haW5uZXQtdGVzdGluZyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN1c2luZy1kb2NrZXItaW1hZ2VzLWZvci1tYWlubmV0LXRlc3RpbmciPiM8L2E+IFVzaW5nIERvY2tlciBJbWFnZXMgZm9yIE1haW5uZXQgVGVzdGluZzwvaDI+CjxwPlNvbWUgZmVhdHVyZXMgYXJlIG5vdCBzdWl0YWJsZSBmb3IgdGVzdGluZyB1c2luZyBhIGxvY2FsaG9zdCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudC4gSW50ZWdyYXRpb24gdHlwZSBmZWF0dXJlcyBvZnRlbiByZXF1aXJlIG1haW5uZXQgb3IgdGVzdG5ldCBwYXltZW50cyBpbiBvcmRlciB0byBiZSBzdWZmaWNpZW50bHkgdGVzdGVkLiBUaGlzIHdpbGwgc2hvdyB5b3UgaG93IHRvIGRlcGxveSBhIGN1c3RvbSBkb2NrZXIgaW1hZ2UgY29udGFpbmluZyBhbiB1bnJlbGVhc2VkIGZlYXR1cmUgZm9yIHRlc3Rpbmcgb24gYSBsaXZlIHNlcnZlci48L3A+CjxwPlN0ZXAgMTo8L3A+CjxwPjxSb3V0ZXJMaW5rIHRvPSIvQ29udHJpYnV0ZS9Db250cmlidXRlRGV2L0NvbnRyaWJ1dGVEZXZDb2RlLyNnaXQtc2V0dXAiPkZvcmssIGNsb25lIGFuZCBjcmVhdGUgYSBicmFuY2g8L1JvdXRlckxpbms+IG9mIHRoZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnRjcGF5c2VydmVyL2J0Y3BheXNlcnZlciIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+QlRDUGF5IFNlcnZlciByZXBvc2l0b3J5PE91dGJvdW5kTGluay8+PC9hPiBhbmQgbmFtZSB5b3VyIGJyYW5jaDogPGNvZGU+YnRjcGF5LWJyYW5jaDwvY29kZT4uIE1ha2UgYSBtb2RpZmljYXRpb24sIHN1Y2ggYXMgY2hhbmdpbmcgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2J0Y3BheXNlcnZlci9idGNwYXlzZXJ2ZXIvYmxvYi9tYXN0ZXIvQlRDUGF5U2VydmVyL1ZpZXdzL0hvbWUvSG9tZS5jc2h0bWwjTDkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnRoaXMgbGluZTxPdXRib3VuZExpbmsvPjwvYT4gb24geW91ciBuZXcgYnJhbmNoLjwvcD4KPHA+U3RlcCAyOjwvcD4KPHA+PFJvdXRlckxpbmsgdG89Ii9Db250cmlidXRlL0NvbnRyaWJ1dGVEZXYvQ29udHJpYnV0ZURldkNvZGUvI2dpdC1zZXR1cCI+Rm9yaywgY2xvbmUgYW5kIGNyZWF0ZSBhIGJyYW5jaDwvUm91dGVyTGluaz4gb2YgdGhlIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9idGNwYXlzZXJ2ZXIvYnRjcGF5c2VydmVyLWRvY2tlciIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+QlRDUGF5IFNlcnZlciBEb2NrZXIgcmVwb3NpdG9yeTxPdXRib3VuZExpbmsvPjwvYT4gYW5kIG5hbWUgeW91ciBicmFuY2g6IDxjb2RlPmRvY2tlci1icmFuY2g8L2NvZGU+LjwvcD4KPHA+U3RlcCAzOjwvcD4KPHA+Q3JlYXRlIGEgRG9ja2VyIEh1YiBhY2NvdW50LCBEb2NrZXIgcmVwb3NpdG9yeSwgZG93bmxvYWQgRG9ja2VyIERlc2t0b3AgYW5kIExvZ2luIHRvIHlvdXIgYWNjb3VudCBieSBmb2xsb3dpbmcgPGEgaHJlZj0iaHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZG9ja2VyLWh1Yi8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnRoZXNlIHN0ZXBzPE91dGJvdW5kTGluay8+PC9hPi48L3A+CjxwPlN0ZXAgNDo8L3A+CjxwPlNpbmNlIEJUQ1BheSBTZXJ2ZXIgcmVxdWlyZXMgYSBibG9ja2NoYWluIHN5bmMsIGl0J3MgZWFzaWVzdCB0byB1c2UgYW4gYWxyZWFkeSBkZXBsb3llZCAmYW1wOyBzeW5jZWQgc2VydmVyLiBUaGlzIHNlcnZlciBzaG91bGQgYmUgZGVwbG95ZWQgcmVmZXJlbmNpbmcgeW91ciBvd24gPGNvZGU+ZG9ja2VyLWJyYW5jaDwvY29kZT4gY3JlYXRlZCBpbiBzdGVwIDIuIFNlZSB0aGlzIGV4YW1wbGUgdXNpbmcgdGhlIDxhIGhyZWY9Imh0dHBzOi8vbGF1bmNoYnRjcGF5Lmx1bmFub2RlLmNvbS8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkx1bmFOb2RlIGxhdW5jaGVyPE91dGJvdW5kTGluay8+PC9hPjo8L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4uLy4uL2ltZy9Db250cmlidXRlL2x1bmFub2RlLWZvcmsucG5nIiBhbHQ9Ikx1bmFOb2RlIEZvcmsiPjwvZmlndXJlPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgd2FybmluZyI+PHAgY2xhc3M9ImN1c3RvbS1ibG9jay10aXRsZSI+V0FSTklORzwvcD4KPHA+Tm90ZSB0aGUgaW1hZ2UgYWJvdmUgc2hvd3MgeW91IG11c3Qgc3BlY2lmeSB5b3VyIEdpdEh1YiByZXBvc2l0b3J5IHVybCBhbmQgYnJhbmNoIG5hbWUgb2YgeW91ciBmb3JrZWQgYW5kIGNsb25lZCBidGNwYXlzZXJ2ZXItZG9ja2VyIHJlcG9zaXRvcnkgeW91IGNyZWF0ZWQgaW4gc3RlcCAyLjwvcD4KPC9kaXY+CjxwPlN0ZXAgNTo8L3A+CjxwPkluc2lkZSB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgeW91ciA8Y29kZT5idGNwYXktYnJhbmNoPC9jb2RlPiB0aGVyZSBhcmUgRG9ja2VyZmlsZXMgcHJlZml4ZWQgYnkgdGhlIGZvbGxvd2luZzogYW1kNjQsIGFybTMydjcsIGFybTY0djguIFdlIG5lZWQgdG8gYnVpbGQgYW5kIHB1c2ggYSBjdXN0b20gaW1hZ2UgdXNpbmcgdGhlIERvY2tlcmZpbGUgZm9yIHRoZSBPUyBiZWluZyB1c2VkLjwvcD4KPHA+UmVwbGFjZSA8Y29kZT4mbHQ7ZG9ja2VyVXNlciZndDs8L2NvZGU+IHdpdGggeW91ciBEb2NrZXJodWIgdXNlcm5hbWUuIFJlcGxhY2UgdGhlIHRhZyA8Y29kZT4xLjAuMC4xPC9jb2RlPiB3aXRoIHlvdXIgb3duIGN1c3RvbSB2ZXJzaW9uIHRhZyBvciB1c2UgPGNvZGU+bGF0ZXN0PC9jb2RlPiB0YWcgaW4gdGhlIGZvbGxvd2luZyBjb21tYW5kczo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLWRvY2tlciBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS1kb2NrZXIiPjxjb2RlPjxzcGFuIGNsYXNzPSJ0b2tlbiBjb21tZW50Ij4jYnVpbGQgaW1hZ2U8L3NwYW4+CmRvY2tlciBidWlsZCA8c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPi08L3NwYW4+dCAmbHQ7ZG9ja2VyVXNlcjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Pjwvc3Bhbj4vYnRjcGF5c2VydmVyPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj46PC9zcGFuPjEuMC4wLjEgPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4tPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+LTwvc3Bhbj5maWxlIC4vYW1kNjQuRG9ja2VyZmlsZSAuCgo8c3BhbiBjbGFzcz0idG9rZW4gY29tbWVudCI+I3B1c2ggaW1hZ2U8L3NwYW4+CmRvY2tlciBwdXNoICZsdDtkb2NrZXJVc2VyPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4+PC9zcGFuPi9idGNwYXlzZXJ2ZXI8c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPjo8L3NwYW4+MS4wLjAuMQo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5TdGVwIDY6PC9wPgo8cD5DaGVjayB0aGF0IHlvdXIgaW1hZ2UgYXBwZWFycyBpbiB5b3VyIERvY2tlciBIdWIgcmVwb3NpdG9yeSBhbmQgdGhlIHZlcnNpb24gdGFnIG1hdGNoZXMgdGhlIG9uZSB5b3UgaGF2ZSBzdXBwbGllZCBpbiB0aGUgcHVzaCBjb21tYW5kIGFib3ZlLjwvcD4KPHA+U3RlcCA3OjwvcD4KPHA+TG9jYXRlIHRoZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnRjcGF5c2VydmVyL2J0Y3BheXNlcnZlci1kb2NrZXIvdHJlZS9tYXN0ZXIvZG9ja2VyLWNvbXBvc2UtZ2VuZXJhdG9yL2RvY2tlci1mcmFnbWVudHMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmJ0Y3BheXNlcnZlci55bWwgZG9ja2VyLWZyYWdtZW50PE91dGJvdW5kTGluay8+PC9hPiBpbiB5b3VyIGxvY2FsIDxjb2RlPmRvY2tlci1icmFuY2g8L2NvZGU+IGNyZWF0ZWQgaW4gc3RlcCAyLiBSZXBsYWNlIHRoZSBidGNwYXlzZXJ2ZXIgaW1hZ2UncyByZWZlcmVuY2VkIHJlcG9zaXRvcnkgdG8gYmUgeW91ciBEb2NrZXIgaW1hZ2UuIFJlcGxhY2UgPGNvZGU+Jmx0O2RvY2tlclVzZXImZ3Q7PC9jb2RlPiB3aXRoIHlvdXIgRG9ja2VyaHViIHVzZXJuYW1lIGFuZCB0YWcgdmVyc2lvbiAoZXhhbXBsZTogMS4wLjAuMSkgd2l0aCB0aGUgb25lIHlvdSBoYXZlIHN1cHBsaWVkIGluIHlvdXIgc3RlcCA1IGFib3ZlLjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UteWFtbCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS15YW1sIj48Y29kZT48c3BhbiBjbGFzcz0idG9rZW4ga2V5IGF0cnVsZSI+aW1hZ2U8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj46PC9zcGFuPiAkPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj57PC9zcGFuPkJUQ1BBWV9JTUFHRTxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Ojwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPi08L3NwYW4+Jmx0O2RvY2tlclVzZXI8c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPj48L3NwYW4+L2J0Y3BheXNlcnZlcjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Ojwvc3Bhbj4xLjAuMC4xJCZsdDtCVENQQVlfQlVJTERfQ09ORklHVVJBVElPTjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Pjwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPj88L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj59PC9zcGFuPgo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5TdGVwIDg6PC9wPgo8cD5QdXNoIHlvdXIgbG9jYWwgPGNvZGU+ZG9ja2VyLWJyYW5jaDwvY29kZT4gY2hhbmdlcyB0byB5b3VyIEJUQ1BheVNlcnZlciBEb2NrZXIgcmVwb3NpdG9yeSBvbiBHaXRIdWIuPC9wPgo8cD5TdGVwIDk6PC9wPgo8cD48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by11cGRhdGUtYnRjcGF5LXNlcnZlciI+VXBkYXRlIHlvdXIgc2VydmVyPC9Sb3V0ZXJMaW5rPi48L3A+CjxwPk5vdyB5b3UgY2FuIHRlc3QgeW91ciBmZWF0dXJlIGFzIGlmIGl0IHdhcyBhbHJlYWR5IHJlbGVhc2VkITwvcD4KPGgyIGlkPSJjcmVhdGUtaW52b2ljZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjcmVhdGUtaW52b2ljZSI+IzwvYT4gQ3JlYXRlIEludm9pY2U8L2gyPgo8cD5DcmVhdGluZyBhbiBpbnZvaWNlIGFuZCBzZW5kaW5nIHBheW1lbnQgaXMgYW4gaW1wb3J0YW50IGZlYXR1cmUgaW4gQlRDUGF5IGFuZCBpbiBvcmRlciB0byBtYW51YWxseSB0ZXN0IHRoaXMsIHlvdSBtdXN0IGZpcnN0OjwvcD4KPHVsPgo8bGk+Q3JlYXRlIGEgU3RvcmU8L2xpPgo8bGk+U2V0dXAgYSBXYWxsZXQ8L2xpPgo8L3VsPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5USVA8L3A+CjxwPlVzZSB0aGUgaG90IHdhbGxldCBmb3IgZmFzdGVzdCB3YWxsZXQgc2V0dXAgZHVyaW5nIHRlc3RpbmcuIEltcG9ydCBmcm9tIC4uLiAmZ3Q7IGEgbmV3L2V4aXN0aW5nIHNlZWQgJmd0OyBjaGVjayBJcyBob3Qgd2FsbGV0ICZndDsgR2VuZXJhdGU8L3A+CjwvZGl2Pgo8dWw+CjxsaT5DcmVhdGUgYW4gaW52b2ljZSBmb3IgeW91ciBzdG9yZTwvbGk+CjwvdWw+CjxoMiBpZD0icGF5LWludm9pY2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcGF5LWludm9pY2UiPiM8L2E+IFBheSBJbnZvaWNlPC9oMj4KPHA+T3BlbiBhIG5ldyBQb3dlcnNoZWxsIHRlcm1pbmFsIGFuZCBuYXZpZ2F0ZSB0byB5b3VyIDxjb2RlPkJUQ1BheVNlcnZlci5UZXN0czwvY29kZT4gZGlyZWN0b3J5IHdoZXJlIG91ciBEb2NrZXItQ29tcG9zZSBjb21tYW5kcyBhcmUgcnVuIGZvciB0aGUgcHJvamVjdC4gQ29weSB0aGUgYW1vdW50IGFuZCBhZGRyZXNzIGZvciBwYXltZW50IGZyb20geW91ciBpbnZvaWNlLiBBZGQgdGhlbSBpbnRvIHRoZSBmb2xsb3dpbmcgY29tbWFuZDo8L3A+CjxwPjxjb2RlPi5cZG9ja2VyLWJpdGNvaW4tY2xpLnBzMSBzZW5kdG9hZGRyZXNzICZxdW90O2JjcnQxcXltOTZsOGd6dGdnbGRyYXl3ZHVtZ21mdzI3dThwOGg1dzdoOWtjJnF1b3Q7IDAuMDAwOTc0NDk8L2NvZGU+IHRoZW4gcHJlc3MgPGNvZGU+RW50ZXI8L2NvZGU+LjwvcD4KPHA+Tm90aWNlIHRoYXQgeW91ciBpbnZvaWNlIGhhcyBub3cgYmVlbiBwYWlkIGluIHlvdXIgbG9jYWwgQlRDUGF5IFNlcnZlci48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4uLy4uL2ltZy9Db250cmlidXRlL3JlZ3Rlc3QtcGFpZC1pbnZvaWNlLnBuZyIgYWx0PSJUZXN0IFBhaWQgSW52b2ljZSI+PC9maWd1cmU+CjxwPlRvIHBheSBvdGhlciB0eXBlcyBvZiBwYXltZW50cyBzZWUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2J0Y3BheXNlcnZlci9idGNwYXlzZXJ2ZXIvYmxvYi9tYXN0ZXIvQlRDUGF5U2VydmVyLlRlc3RzL1JFQURNRS5tZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dGhpcyBndWlkZTxPdXRib3VuZExpbmsvPjwvYT4uPC9wPgo8aDIgaWQ9InRlc3RlcnMtZmFxIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Rlc3RlcnMtZmFxIj4jPC9hPiBUZXN0ZXJzIEZBUTwvaDI+CjxoMyBpZD0ic3RhcnQtZGVidWdnaW5nLWdpdmVzLWVycm9yLW5vLWNvbm5lY3Rpb24tY291bGQtYmUtbWFkZS1iZWNhdXNlLXRoZS10YXJnZXQtbWFjaGluZS1hY3RpdmVseS1yZWZ1c2VkLWl0LTEyNzAwMTM5MzcyIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXJ0LWRlYnVnZ2luZy1naXZlcy1lcnJvci1uby1jb25uZWN0aW9uLWNvdWxkLWJlLW1hZGUtYmVjYXVzZS10aGUtdGFyZ2V0LW1hY2hpbmUtYWN0aXZlbHktcmVmdXNlZC1pdC0xMjcwMDEzOTM3MiI+IzwvYT4gU3RhcnQgRGVidWdnaW5nIGdpdmVzIEVycm9yOiBObyBjb25uZWN0aW9uIGNvdWxkIGJlIG1hZGUgYmVjYXVzZSB0aGUgdGFyZ2V0IG1hY2hpbmUgYWN0aXZlbHkgcmVmdXNlZCBpdC4gMTI3LjAuMC4xOjM5MzcyPC9oMz4KPHA+SWYgeW91IHNlZSB0aGlzIGVycm9yLCBpdCBtZWFucyB5b3UgZGlkIG5vdCBzZXQgdXAgeW91ciBSZWd0ZXN0IE5ldHdvcmsgdXNpbmcgdGhlIDxjb2RlPmRvY2tlci1jb21wb3NlIHVwIGRldjwvY29kZT4gY29tbWFuZCBpbiB0aGUgPGNvZGU+QlRDUGF5U2VydmVyLlRlc3RzPC9jb2RlPiBkaXJlY3RvcnkuIFRoaXMgY29tbWFuZCB3aWxsIHNldCB1cCBhbGwgdGhlIGRlcGVuZGVuY2llcyB5b3UgbmVlZCBmb3Igc2VydmljZXMgdXNlZCBieSBCVENQYXkgaW4gdGhlIGxvY2FsIGRldmVsb3BtZW50IGVudmlyb25tZW50LiBZb3UgbXVzdCBydW4gaXQgYmVmb3JlIHlvdSB0cnkgdG8gc3RhcnQgZGVidWdnaW5nLjwvcD4KPGgzIGlkPSJyZWd0ZXN0LXBheW1lbnRzLWFyZS1ub3Qtc2hvd2luZy1hcy1jb25maXJtZWQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmVndGVzdC1wYXltZW50cy1hcmUtbm90LXNob3dpbmctYXMtY29uZmlybWVkIj4jPC9hPiBSZWd0ZXN0IHBheW1lbnRzIGFyZSBub3Qgc2hvd2luZyBhcyBjb25maXJtZWQ/PC9oMz4KPHA+SWYgeW91IG1ha2UgYSA8YSBocmVmPSIjcGF5LWludm9pY2UiPnRlc3QgcGF5bWVudDwvYT4gYW5kIGl0J3Mgc3R1Y2sgYXMgdW5jb25maXJtZWQsIHlvdSBzaG91bGQgbWluZSBzb21lIGJsb2NrcyB0byBhZGQgY29uZmlybWF0aW9ucyB0byB5b3VyIHRyYW5zYWN0aW9uLjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtcG93ZXJzaGVsbCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS1wb3dlcnNoZWxsIj48Y29kZT48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPi48L3NwYW4+XGRvY2tlcjxzcGFuIGNsYXNzPSJ0b2tlbiBvcGVyYXRvciI+LTwvc3Bhbj5iaXRjb2luPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj4tPC9zcGFuPmdlbmVyYXRlPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4uPC9zcGFuPnBzMSAzCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxwPklmIHlvdSBhcmUgbWlzc2luZyB0aGluZ3MgbGlrZSB0ZXN0IHBheW1lbnQgbm90aWZpY2F0aW9ucyBvciBvdGhlciBleHBlY3RlZCBldmVudHMsIHRoaXMgbWF5IGJlIHRoZSByZWFzb24uPC9wPgo8aDMgaWQ9IndoaWNoLWJyYW5jaC1zaG91bGQtYmUtdGVzdGVkLWZvci1tYWpvci1yZWxlYXNlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN3aGljaC1icmFuY2gtc2hvdWxkLWJlLXRlc3RlZC1mb3ItbWFqb3ItcmVsZWFzZXMiPiM8L2E+IFdoaWNoIGJyYW5jaCBzaG91bGQgYmUgdGVzdGVkIGZvciBtYWpvciByZWxlYXNlcz88L2gzPgo8cD5UZXN0aW5nIG1hc3RlciBicmFuY2ggaXMgYWNjZXB0YWJsZSBiZWNhdXNlIGl0IHdpbGwgaW5jbHVkZSB0aGUgcmVsZWFzZSBjaGFuZ2VzLiBIb3dldmVyLCBvdGhlciBjb21taXRzIHdoaWNoIGFyZSBub3QgeWV0IHJlbGVhc2VkIG1heSBhbHNvIGJlIGluIG1hc3Rlci4gSXQgaXMgYWx3YXlzIGdvb2QgdG8gZmluZCBpc3N1ZXMgYmVmb3JlIHRoZSByZWxlYXNlIHNvIG1hc3RlciAob3IgYSBzcGVjaWZpYyBQUikgaXMgdGhlIGlkZWFsIGJyYW5jaCB0byB0ZXN0LjwvcD4KPHA+WW91IGNhbiBjaGVjayB0aGUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2J0Y3BheXNlcnZlci9idGNwYXlzZXJ2ZXIvcmVsZWFzZXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmxhdGVzdCByZWxlYXNlPE91dGJvdW5kTGluay8+PC9hPiB0byBzZWUgdGhlIGNoYW5nZXMgd2hpY2ggYXJlIGF2YWlsYWJsZSBmb3IgY3VycmVudCBkZXBsb3ltZW50cyBhcyB3ZWxsIGFzIHRoZSB1bnJlbGVhc2VkIGNvbW1pdHMuPC9wPgo8aDMgaWQ9ImNhbi1pLW1hcmstYW4taW52b2ljZS1hcy1wYWlkIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Nhbi1pLW1hcmstYW4taW52b2ljZS1hcy1wYWlkIj4jPC9hPiBDYW4gSSBtYXJrIGFuIGludm9pY2UgYXMgcGFpZD88L2gzPgo8cD5ObywgeW91IGNhbid0IG1hcmsgYW4gaW52b2ljZSBhcyBwYWlkLiBJZiB5b3UgbmVlZCBjb21wbGV0ZWQgcGF5bWVudCBzdGF0dXMgZm9yIGRldmVsb3BtZW50LCBlaXRoZXIgPGEgaHJlZj0iI3BheS1pbnZvaWNlIj5wYXkgdGhlIGludm9pY2U8L2E+IG9yIGNyZWF0ZSB0aGUgaW52b2ljZSBmb3IgJDAgd2hpY2ggd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHBhaWQgdXBvbiBjcmVhdGlvbi48L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}