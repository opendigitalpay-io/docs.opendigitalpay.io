{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/FAQ/FAQ-ServerSettings.md?vue&type=template&id=e2a855de&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/FAQ/FAQ-ServerSettings.md","mtime":1617331587402},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJzZXJ2ZXItc2V0dGluZ3MtZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc2VydmVyLXNldHRpbmdzLWZyZXF1ZW50bHktYXNrZWQtcXVlc3Rpb25zIj4jPC9hPiBTZXJ2ZXIgU2V0dGluZ3MgRnJlcXVlbnRseSBBc2tlZCBRdWVzdGlvbnM8L2gxPgo8cD5UaGlzIGRvY3VtZW50IGNvdmVycyBhbGwgdGhlIHF1ZXN0aW9ucyBhbmQgaXNzdWVzIHJlbGF0ZWQgdG8gU2VydmVyIFNldHRpbmdzLiBUaGVzZSBzZXR0aW5ncyBhcmUgb25seSBhdmFpbGFibGUgdG8gdGhlIHNlcnZlciBhZG1pbi4gVGFrZSBhIGxvb2sgYXQgdGhlIDxSb3V0ZXJMaW5rIHRvPSIvV2Fsa3Rocm91Z2gvIj53YWxrdGhyb3VnaCBwYWdlPC9Sb3V0ZXJMaW5rPiB0byBsZWFybiBtb3JlLjwvcD4KPGgyIGlkPSJtYWludGVuYW5jZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtYWludGVuYW5jZSI+IzwvYT4gTWFpbnRlbmFuY2U8L2gyPgo8dWw+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by11cGRhdGUtYnRjcGF5LXNlcnZlciI+SG93IHRvIHVwZGF0ZSBCVENQYXkgU2VydmVyPzwvUm91dGVyTGluaz48L2xpPgo8bGk+PFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctdG8tcmVzdGFydC1idGNwYXktc2VydmVyIj5Ib3cgdG8gcmVzdGFydCBCVENQYXkgU2VydmVyPzwvUm91dGVyTGluaz48L2xpPgo8bGk+PFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctdG8tc3NoLWludG8tbXktYnRjcGF5LXJ1bm5pbmctb24tdnBzIj5Ib3cgdG8gU1NIIGludG8gbXkgQlRDUGF5IHJ1bm5pbmcgb24gVlBTPzwvUm91dGVyTGluaz48L2xpPgo8bGk+PFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctY2FuLWktc2VlLW15LWJ0Y3BheS12ZXJzaW9uIj5Ib3cgY2FuIEkgY2hlY2sgbXkgQlRDUGF5IFNlcnZlciB2ZXJzaW9uPzwvUm91dGVyTGluaz48L2xpPgo8bGk+PFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNob3ctY2FuLWktY2hlY2stbXktYnRjcGF5LXNlcnZlci12ZXJzaW9uLXZpYS10ZXJtaW5hbCI+SG93IGNhbiBJIGNoZWNrIG15IEJUQ1BheSBTZXJ2ZXIgdmVyc2lvbiB2aWEgdGVybWluYWw/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI3doYXQtaXMtYnRjcGF5LXNzaC1rZXktZmlsZSI+V2hhdCBpcyBCVENQYXkgU1NIIGtleSBmaWxlPzwvUm91dGVyTGluaz48L2xpPgo8bGk+PFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNmb3Jnb3QtYnRjcGF5LWFkbWluLXBhc3N3b3JkIj5Gb3Jnb3QgQlRDUGF5IEFkbWluIHBhc3N3b3JkPC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by1hZGQtYS1uZXctdXNlci1ieS1pbnZpdGUiPkhvdyB0byBhZGQgYSBuZXcgdXNlciBieSBpbnZpdGU/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by1kaXNhYmxlLXUyZi1hbmQtMmZhLWZvci1hLXVzZXIiPkhvdyB0byBkaXNhYmxlIFUyRiBhbmQgMkZBIGZvciBhIHVzZXI/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by1jb25maWd1cmUtc210cC1zZXR0aW5ncy1pbi1idGNwYXkiPkhvdyB0byBjb25maWd1cmUgU01UUCBzZXR0aW5ncyBpbiBCVENQYXk/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2Vycm9yLW1haW50ZW5hbmNlLWZlYXR1cmUtcmVxdWlyZXMtYWNjZXNzLXRvLVNTSC1wcm9wZXJseS1jb25maWd1cmVkLWluLWJ0Y3BheXNlcnZlci1jb25maWd1cmF0aW9uIj5FcnJvcjogTWFpbnRlbmFuY2UgZmVhdHVyZSByZXF1aXJlcyBhY2Nlc3MgdG8gU1NIIHByb3Blcmx5IGNvbmZpZ3VyZWQgaW4gQlRDUGF5U2VydmVyIGNvbmZpZ3VyYXRpb248L1JvdXRlckxpbms+PC9saT4KPGxpPjxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jZXJyb3IteW91ci1sb2NhbC1jaGFuZ2VzLXRvLXRoZS1mb2xsb3dpbmctZmlsZXMtd291bGQtYmUtb3ZlcndyaXR0ZW4tYnktbWVyZ2UiPkVycm9yOiBZb3VyIGxvY2FsIGNoYW5nZXMgdG8gdGhlIGZvbGxvd2luZyBmaWxlcyB3b3VsZCBiZSBvdmVyd3JpdHRlbiBieSBtZXJnZTwvUm91dGVyTGluaz48L2xpPgo8bGk+PFJvdXRlckxpbmsgdG89Ii9GQVEvRkFRLVNlcnZlclNldHRpbmdzLyNlcnJvci1idGNwYXktc3Noa2V5ZmlsZS1pcy1ub3Qtc2V0LXdoZW4tcnVubmluZy10aGUtZG9ja2VyLWluc3RhbGwtb3ItdW5hYmxlLXRvLXVwZGF0ZS10aHJvdWdoLXNlcnZlci1zZXR0aW5ncy1tYWludGVuYW5jZSI+RXJyb3I6IHRoZSBCVENQQVlfU1NIS0VZRklMRSB2YXJpYWJsZSBpcyBub3Qgc2V0LyBVbmFibGUgdG8gdXBkYXRlPC9Sb3V0ZXJMaW5rPjwvbGk+CjwvdWw+CjxoMiBpZD0idGhlbWUtY3VzdG9taXphdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN0aGVtZS1jdXN0b21pemF0aW9uIj4jPC9hPiBUaGVtZSAvIEN1c3RvbWl6YXRpb248L2gyPgo8dWw+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by1jdXN0b21pemUtbXktYnRjcGF5LXRoZW1lLXN0eWxlIj5Ib3cgdG8gY3VzdG9taXplIG15IEJUQ1BheSB0aGVtZSBzdHlsZT88L1JvdXRlckxpbms+PC9saT4KPGxpPjxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jaG93LXRvLW1vZGlmeS10aGUtY2hlY2tvdXQtcGFnZSI+SG93IHRvIG1vZGlmeSB0aGUgQlRDUGF5IGNoZWNrb3V0IHBhZ2U/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL1RoZW1lLyMyLWJvb3RzdHJhcC10aGVtZXMiPkhvdyB0byBjdXN0b21pemUgdGhlIFBPUyBhcHAgdGhlbWU/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by1hZGQtZ29vZ2xlLWFuYWx5dGljcy1jb2RlLXRvLWJ0Y3BheSI+SG93IHRvIGFkZCBHb29nbGUgQW5hbHl0aWNzIGNvZGUgdG8gQlRDUGF5PzwvUm91dGVyTGluaz48L2xpPgo8L3VsPgo8aDIgaWQ9InBvbGljaWVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3BvbGljaWVzIj4jPC9hPiBQb2xpY2llczwvaDI+Cjx1bD4KPGxpPjxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jaG93LXRvLWFsbG93LXJlZ2lzdHJhdGlvbi1vbi1teS1idGNwYXktc2VydmVyIj5Ib3cgdG8gYWxsb3cgcmVnaXN0cmF0aW9uIG9uIG15IEJUQ1BheSBTZXJ2ZXI/PC9Sb3V0ZXJMaW5rPjwvbGk+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by1oaWRlLW15LWJ0Y3BheS1zZXJ2ZXItZnJvbS1zZWFyY2gtZW5naW5lcyI+SG93IHRvIGhpZGUgbXkgQlRDUGF5IFNlcnZlciBmcm9tIFNlYXJjaCBFbmdpbmVzPzwvUm91dGVyTGluaz48L2xpPgo8L3VsPgo8aDIgaWQ9InNlcnZpY2VzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NlcnZpY2VzIj4jPC9hPiBTZXJ2aWNlczwvaDI+Cjx1bD4KPGxpPjxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jaG93LXRvLXJlbW90ZWx5LWNvbm5lY3QtdG8tbXktYnRjcGF5LWZ1bGwtbm9kZSI+SG93IHRvIHJlbW90ZWx5IGNvbm5lY3QgdG8gbXkgQlRDUGF5IGZ1bGwgbm9kZT88L1JvdXRlckxpbms+PC9saT4KPC91bD4KPGgyIGlkPSJmaWxlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNmaWxlcyI+IzwvYT4gRmlsZXM8L2gyPgo8dWw+CjxsaT48Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtU2VydmVyU2V0dGluZ3MvI2hvdy10by11cGxvYWQtZmlsZXMtdG8tYnRjcGF5Ij5Ib3cgdG8gdXBsb2FkIGZpbGVzIHRvIEJUQ1BheT88L1JvdXRlckxpbms+PC9saT4KPC91bD4KPGgyIGlkPSJtYWludGVuYW5jZS0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21haW50ZW5hbmNlLTIiPiM8L2E+IE1haW50ZW5hbmNlPC9oMj4KPGgzIGlkPSJob3ctdG8tdXBkYXRlLWJ0Y3BheS1zZXJ2ZXIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LXRvLXVwZGF0ZS1idGNwYXktc2VydmVyIj4jPC9hPiBIb3cgdG8gdXBkYXRlIEJUQ1BheSBTZXJ2ZXI/PC9oMz4KPHA+VGhlcmUgYXJlIDIgd2F5cyB0byB1cGRhdGUgeW91ciBCVENQYXkgU2VydmVyOjwvcD4KPG9sPgo8bGk+VXBkYXRpbmcgaW4gdGhlIHVzZXIgaW50ZXJmYWNlOiBTZXJ2ZXIgU2V0dGluZ3MgJmd0OyBNYWludGVuYW5jZSAmZ3Q7IFVwZGF0ZS48L2xpPgo8L29sPgo8ZmlndXJlPjxpbWcgc3JjPSIuLi9pbWcvSG93VG9VcGRhdGVCVENQYXlTZXJ2ZXIucG5nIiBhbHQ9IlVwZGF0aW5nIEJUQ1BheSBTZXJ2ZXIiPjwvZmlndXJlPgo8b2wgc3RhcnQ9IjIiPgo8bGk+VXBkYXRpbmcgdXNpbmcgU1NIOiBMb2dpbiBpbnRvIHlvdXIgdmlydHVhbCBtYWNoaW5lIHdpdGggc3NoLCB0aGVuIGFwcGx5IGZvbGxvd2luZyBjb21tYW5kczo8L2xpPgo8L29sPgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS1iYXNoIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLWJhc2giPjxjb2RlPjxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+c3Vkbzwvc3Bhbj4gPHNwYW4gY2xhc3M9InRva2VuIGZ1bmN0aW9uIj5zdTwvc3Bhbj4gLQo8c3BhbiBjbGFzcz0idG9rZW4gYnVpbHRpbiBjbGFzcy1uYW1lIj5jZDwvc3Bhbj4gYnRjcGF5c2VydmVyLWRvY2tlcgpidGNwYXktdXBkYXRlLnNoCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoMyBpZD0iaG93LXRvLXJlc3RhcnQtYnRjcGF5LXNlcnZlciI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctdG8tcmVzdGFydC1idGNwYXktc2VydmVyIj4jPC9hPiBIb3cgdG8gcmVzdGFydCBCVENQYXkgU2VydmVyPzwvaDM+CjxwPlRoZXJlIGFyZSAyIHdheXMgdG8gcmVzdGFydCB5b3VyIEJUQ1BheSBTZXJ2ZXI6PC9wPgo8b2w+CjxsaT5SZXN0YXJ0aW5nIGluIHRoZSB1c2VyIGludGVyZmFjZTogU2VydmVyIFNldHRpbmdzICZndDsgTWFpbnRlbmFuY2UgJmd0OyBSZXN0YXJ0LjwvbGk+Cjwvb2w+CjxmaWd1cmU+PGltZyBzcmM9Ii4uL2ltZy9Ib3dUb1Jlc3RhcnRCVENQYXlTZXJ2ZXIucG5nIiBhbHQ9IlJlc3RhcnRpbmcgQlRDUGF5IFNlcnZlciI+PC9maWd1cmU+CjxvbCBzdGFydD0iMiI+CjxsaT5SZXN0YXJ0aW5nIHVzaW5nIFNTSDogTG9naW4gaW50byB5b3VyIHZpcnR1YWwgbWFjaGluZSB3aXRoIHNzaCwgdGhlbiBhcHBseSBmb2xsb3dpbmcgY29tbWFuZHM6PC9saT4KPC9vbD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS1iYXNoIj48Y29kZT48c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPnN1ZG88L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+c3U8L3NwYW4+IC0KPHNwYW4gY2xhc3M9InRva2VuIGJ1aWx0aW4gY2xhc3MtbmFtZSI+Y2Q8L3NwYW4+IGJ0Y3BheXNlcnZlci1kb2NrZXIKYnRjcGF5LXJlc3RhcnQuc2gKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGgzIGlkPSJob3ctdG8tc3NoLWludG8tbXktYnRjcGF5LXJ1bm5pbmctb24tdnBzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by1zc2gtaW50by1teS1idGNwYXktcnVubmluZy1vbi12cHMiPiM8L2E+IEhvdyB0byBTU0ggaW50byBteSBCVENQYXkgcnVubmluZyBvbiBWUFM/PC9oMz4KPHA+Rm9sbG93IHRoZXNlIGluc3RydWN0aW9ucyB0byBTU0ggdmlhIGRvbWFpbiBvciBJUDo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLSBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS10ZXh0Ij48Y29kZT5zc2ggZG9tYWludXNlckBleGFtcGxlLmNvbSAoZG9tYWluKQpvcgpzc2ggZG9tYWludXNlckA3MC4zMi44Ni4xNzUgKElQKQoKZG9tYWludXNlckBleGFtcGxlLmNvbSYjMzk7cyBwYXNzd29yZDoKeW91clBhc3N3b3JkCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxwPlByZXNzIEVudGVyPC9wPgo8cD5JZiB0aGlzIGlzIHlvdXIgZmlyc3QgdGltZSBjb25uZWN0aW5nIHRvIHRoZSBzZXJ2ZXIgZnJvbSB0aGlzIGNvbXB1dGVyLCB5b3Ugd2lsbCBzZWUgdGhlIGZvbGxvd2luZyBvdXRwdXQuPC9wPgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+VGhlIGF1dGhlbnRpY2l0eSBvZiBob3N0ICYjMzk7ZXhhbXBsZS5jb20gKDcwLjMyLjg2LjE3NSkmIzM5OyBjYW4mIzM5O3QgYmUgZXN0YWJsaXNoZWQuClJTQSBrZXkgZmluZ2VycHJpbnQgaXMgM2M6NmQ6NWM6OTk6NWQ6YjU6YzY6MjU6NWE6ZDM6Nzg6OGU6ZDI6ZjU6N2E6MDEuCkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjb250aW51ZSBjb25uZWN0aW5nICh5ZXMvbm8pPwoKeWVzCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxwPk9yIHNlZSB0aGlzIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9KZWZmVmFuZHJld0pyL3BhdHJvbi9ibG9iL21hc3Rlci9TU0gubWQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkx1bmFOb2RlIGV4YW1wbGU8T3V0Ym91bmRMaW5rLz48L2E+IHdpdGggUHVUVFkuPC9wPgo8aDMgaWQ9Imhvdy1jYW4taS1zZWUtbXktYnRjcGF5LXZlcnNpb24iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LWNhbi1pLXNlZS1teS1idGNwYXktdmVyc2lvbiI+IzwvYT4gSG93IGNhbiBJIHNlZSBteSBCVENQYXkgdmVyc2lvbj88L2gzPgo8cD5Zb3UgY2FuIHNlZSB5b3VyIEJUQ1BheSB2ZXJzaW9uIGluIHRoZSA8c3Ryb25nPmJvdHRvbSByaWdodCBvZiB0aGUgcGFnZSBmb290ZXI8L3N0cm9uZz4gd2hlbiB5b3UncmUgbG9nZ2VkIGluIGFzIGEgc2VydmVyIGFkbWluLjwvcD4KPHA+RGVwbG95bWVudHMgdXNpbmcgdjEuMC41LjcgYW5kIGxhdGVyIHdpbGwgYXV0b21hdGljYWxseSByZWNlaXZlIG5vdGlmaWNhdGlvbnMgdG8gYWxlcnQgd2hlbiBhIG5ldyBCVENQYXkgU2VydmVyIHZlcnNpb24gaGFzIGJlZW4gcmVsZWFzZWQuPC9wPgo8ZmlndXJlPjxpbWcgc3JjPSIuLi9pbWcvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb24tdmVyc2lvbi5wbmciIGFsdD0iVmVyc2lvbiI+PC9maWd1cmU+CjxwPk5vdGU6IFRoaXMgZmVhdHVyZSB3aWxsIGF1dG9tYXRpY2FsbHkgc2V0IHRoZSA8Y29kZT5CVENQQVlfVVBEQVRFVVJMPC9jb2RlPiBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbiB0aGUgQlRDUGF5IFNlcnZlciBjb250YWluZXIgdG8gbWFrZSBhIHNpbmdsZSBkYWlseSByZXF1ZXN0IHRvIDxhIGhyZWY9Imh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvYnRjcGF5c2VydmVyL2J0Y3BheXNlcnZlci9yZWxlYXNlcy9sYXRlc3QiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnRoaXMgR2l0aHViIGVuZHBvaW50PE91dGJvdW5kTGluay8+PC9hPi4gU2VydmVyIGFkbWlucyBjYW4gZGlzYWJsZSB0aGVzZSBub3RpZmljYXRpb25zIGJ5IGRpc2FibGluZyB0aGUgcG9saWN5IGluIFNlcnZlciBTZXR0aW5ncyAmZ3Q7IFBvbGljaWVzICZndDsgQ2hlY2sgcmVsZWFzZXMgb24gR2l0SHViLjwvcD4KPGgzIGlkPSJob3ctY2FuLWktY2hlY2stbXktYnRjcGF5LXNlcnZlci12ZXJzaW9uLXZpYS10ZXJtaW5hbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctY2FuLWktY2hlY2stbXktYnRjcGF5LXNlcnZlci12ZXJzaW9uLXZpYS10ZXJtaW5hbCI+IzwvYT4gSG93IGNhbiBJIGNoZWNrIG15IEJUQ1BheSBTZXJ2ZXIgdmVyc2lvbiB2aWEgdGVybWluYWw/PC9oMz4KPHA+SW4gdGhlIGJ0Y3BheXNlcnZlci1kb2NrZXIgZm9sZGVyOiA8Y29kZT5iaXRjb2luLWNsaS5zaCBnZXRuZXR3b3JraW5mbzwvY29kZT48L3A+CjxoMyBpZD0id2hhdC1pcy1idGNwYXktc3NoLWtleS1maWxlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3doYXQtaXMtYnRjcGF5LXNzaC1rZXktZmlsZSI+IzwvYT4gV2hhdCBpcyBCVENQYXkgU1NIIGtleSBmaWxlPzwvaDM+CjxwPkJUQ1BheSBTU0gga2V5LCBlbmFibGVzIHVzZXJzIHRvIHVwZGF0ZSB0aGVpciBzZXJ2ZXIgb3IgcXVpY2tseSBjaGFuZ2UgdGhlIGRvbWFpbiBuYW1lIGZyb20gYnRjcGF5IHdlYnNpdGUsIHZpYSB0aGUgdXNlciBpbnRlcmZhY2UuPC9wPgo8aDMgaWQ9ImZvcmdvdC1idGNwYXktYWRtaW4tcGFzc3dvcmQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZm9yZ290LWJ0Y3BheS1hZG1pbi1wYXNzd29yZCI+IzwvYT4gRm9yZ290IEJUQ1BheSBBZG1pbiBwYXNzd29yZD88L2gzPgo8cD5GaXJzdCwgcmVnaXN0ZXIgYSBuZXcgdXNlciBvbiB5b3VyIEJUQ1BheSBTZXJ2ZXIsIGJ5IGNsaWNraW5nICZxdW90O1JlZ2lzdGVyJnF1b3Q7LCBmb3IgZXhhbXBsZTogJnF1b3Q7bmV3YWRtaW5AZXhhbXBsZS5jb20mcXVvdDsuPC9wPgo8cD5JZiB5b3UgY2FuJ3QgY3JlYXRlIGEgbmV3IHVzZXIgYmVjYXVzZSByZWdpc3RyYXRpb25zIGFyZSBkaXNhYmxlZCBpbiB5b3VyIFNlcnZlciBTZXR0aW5ncyAmZ3Q7IFBvbGljaWVzLCB5b3UgbmVlZCB0byByZXNldCB0aGUgcG9saWNpZXMgc2V0dGluZ3MuIFBsZWFzZSBza2lwIHRoaXMgc3RlcCBpZiB5b3UgY2FuIGNyZWF0ZSBhIG5ldyB1c2VyIG9uIHRoZSBmcm9udC1lbmQgaG9tZSBwYWdlIHVzaW5nIHRoZSByZWdpc3RlciBidXR0b24uIFJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgKEl0IGFsc28gZGVsZXRlcyBhbnkgb3RoZXIgc2VydmVyIHNldHRpbmdzIGN1cnJlbnRseSBiZWluZyB1c2VkKTo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLWJhc2ggZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCI+PGNvZGU+PHNwYW4gY2xhc3M9InRva2VuIGNvbW1lbnQiPiMgSW4gcm9vdDwvc3Bhbj4KPHNwYW4gY2xhc3M9InRva2VuIGZ1bmN0aW9uIj5zdWRvPC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPnN1PC9zcGFuPiAtCjxzcGFuIGNsYXNzPSJ0b2tlbiBidWlsdGluIGNsYXNzLW5hbWUiPmNkPC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gdmFyaWFibGUiPiRCVENQQVlfQkFTRV9ESVJFQ1RPUlk8L3NwYW4+L2J0Y3BheXNlcnZlci1kb2NrZXIvCjxzcGFuIGNsYXNzPSJ0b2tlbiBjb21tZW50Ij4jIFJlLW9wZW4gcmVnaXN0cmF0aW9uczwvc3Bhbj4KLi9idGNwYXktYWRtaW4uc2ggcmVzZXQtc2VydmVyLXBvbGljeQo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5IZWFkIGJhY2sgdG8geW91ciBCVENQYXkgU2VydmVyIGFuZCBjbGljayBvbiB0aGUgJnF1b3Q7UmVnaXN0ZXImcXVvdDsgYnV0dG9uIHdoaWNoIHNob3VsZCBub3cgYmUgZW5hYmxlZC4gSW4gY2FzZSB5b3UgZG9uJ3Qgc2VlIHRoZSBSZWdpc3RlciBsaW5rIGluIHRoZSBtZW51LCB0aGF0J3MgcHJvYmFibHkgYmVjYXVzZSBvZiB0aGUgY2FjaGluZy4gUmVzdGFydCB5b3VyIGJ0Y3BheSB3aXRoIDxjb2RlPmJ0Y3BheS1yZXN0YXJ0LnNoPC9jb2RlPi48L3A+CjxwPk5leHQsIGFkZCB0aGUgbmV3bHkgcmVnaXN0ZXJlZCB1c2VyIDxjb2RlPm5ld2FkbWluQGV4YW1wbGUuY29tPC9jb2RlPiBhcyBhbiBhZG1pbjo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLWJhc2ggZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCI+PGNvZGU+PHNwYW4gY2xhc3M9InRva2VuIGNvbW1lbnQiPiMgU2V0IG5ldyB1c2VyIGFzIGFkbWluPC9zcGFuPgouL2J0Y3BheS1hZG1pbi5zaCBzZXQtdXNlci1hZG1pbiBuZXdhZG1pbkBleGFtcGxlLmNvbQo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5Ob3cgeW91IGNhbiBhY2Nlc3Mgd2l0aCA8Y29kZT5uZXdhZG1pbkBleGFtcGxlLmNvbTwvY29kZT4gYXMgYWRtaW4uPC9wPgo8cD5XaGVuIHlvdSBhcHBseSB0aGUgY2hhbmdlcywgeW91J2xsIG5vdGljZSB0aGF0IHRoZSBuZXdseSBjcmVhdGVkIHVzZXIgaXNuJ3QgYSBtZW1iZXIgb2YgYW55IHN0b3Jlcy4gSW4gdGhhdCBjYXNlLCA8YSBocmVmPSJodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qdXN0aW5tb29uLzgxMjhlNjZmYzExZDkwYWU1NzMyZjI0OTE1NzBiZmM1IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5mb2xsb3cgdGhpcyBndWlkZTxPdXRib3VuZExpbmsvPjwvYT4gdG8gYWRkIHRoZSBuZXcgdXNlciB0byBhbGwgb3IgY2VydGFpbiBzdG9yZXMuPC9wPgo8aDMgaWQ9Imhvdy10by1hZGQtYS1uZXctdXNlci1ieS1pbnZpdGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LXRvLWFkZC1hLW5ldy11c2VyLWJ5LWludml0ZSI+IzwvYT4gSG93IHRvIGFkZCBhIG5ldyB1c2VyIGJ5IGludml0ZT88L2gzPgo8cD5TZXJ2ZXIgYWRtaW5zIGNhbiBhZGQgbmV3IHVzZXJzIGJ5IGNyZWF0aW5nIGFuIGludml0ZSBsaW5rIHRvIHNoYXJlIHdpdGggdGhlbS4gVGhpcyBjYW4gYWxsb3cgYWRtaW5zIHRvIGRpc2FibGUgcHVibGljIHJlZ2lzdHJhdGlvbiBvbiB0aGUgc2VydmVyLCBvciB0byBpbnZpdGUgc3BlY2lmaWMgdXNlcnMgYnkgY2xpY2tpbmc6IFNlcnZlciBTZXR0aW5ncyAmZ3Q7IEFkZCBVc2VyIChkbyBub3QgcHJvdmlkZSBwYXNzd29yZCkgJmd0OyBDcmVhdGUgYWNjb3VudDwvcD4KPGZpZ3VyZT48aW1nIHNyYz0iLi4vaW1nL0ludml0ZVVzZXIucG5nIiBhbHQ9Ikludml0ZSBVc2VyIj48L2ZpZ3VyZT4KPHA+QSBzaGFyZWFibGUgbGluayB3aWxsIGJlIGRpc3BsYXllZCBmb3IgdGhlIHNlcnZlciBhZG1pbiB0byBkaXN0cmlidXRlLiBBbiBlbWFpbCB3aWxsIGJlIHNlbnQgKGlmIGVtYWlsIGlzIDxhIGhyZWY9IiNob3ctdG8tY29uZmlndXJlLXNtdHAtc2V0dGluZ3MtaW4tYnRjcGF5Ij5jb25maWd1cmVkIG9uIHRoZSBzZXJ2ZXI8L2E+IHRvIHNldCB0aGUgcGFzc3dvcmQuIFRoZSBuZXcgdXNlciB3aWxsIGNyZWF0ZSBhIHBhc3N3b3JkIHVwb24gZmlyc3QgdmlzaXQgdG8gdGhlIGludml0ZSBsaW5rLjwvcD4KPGgzIGlkPSJob3ctdG8tZGlzYWJsZS11MmYtYW5kLTJmYS1mb3ItYS11c2VyIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by1kaXNhYmxlLXUyZi1hbmQtMmZhLWZvci1hLXVzZXIiPiM8L2E+IEhvdyB0byBkaXNhYmxlIFUyRiBhbmQgMkZBIGZvciBhIHVzZXI/PC9oMz4KPHA+UmVtb3ZlIFUyRiBhbmQgMkZBIHNldHRpbmdzIGZvciBhIHJlZ2lzdGVyZWQgdXNlciwgZm9yIGV4YW1wbGUgPGNvZGU+dXNlckBleGFtcGxlLmNvbTwvY29kZT4gd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmRzOjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS1iYXNoIj48Y29kZT48c3BhbiBjbGFzcz0idG9rZW4gY29tbWVudCI+IyBJbiByb290PC9zcGFuPgo8c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPnN1ZG88L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+c3U8L3NwYW4+IC0KPHNwYW4gY2xhc3M9InRva2VuIGJ1aWx0aW4gY2xhc3MtbmFtZSI+Y2Q8L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiB2YXJpYWJsZSI+JEJUQ1BBWV9CQVNFX0RJUkVDVE9SWTwvc3Bhbj4vYnRjcGF5c2VydmVyLWRvY2tlci8KPHNwYW4gY2xhc3M9InRva2VuIGNvbW1lbnQiPiMgRGlzYWJsZSBVMkYgYW5kIDJGQTwvc3Bhbj4KLi9idGNwYXktYWRtaW4uc2ggZGlzYWJsZS1tdWx0aWZhY3RvciB1c2VyQGV4YW1wbGUuY29tCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoMyBpZD0iaG93LXRvLWNvbmZpZ3VyZS1zbXRwLXNldHRpbmdzLWluLWJ0Y3BheSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctdG8tY29uZmlndXJlLXNtdHAtc2V0dGluZ3MtaW4tYnRjcGF5Ij4jPC9hPiBIb3cgdG8gY29uZmlndXJlIFNNVFAgc2V0dGluZ3MgaW4gQlRDUGF5PzwvaDM+CjxwPlNNVFAgY2FuIGJlIGNvbmZpZ3VyZWQgaW4gc2V0dGluZ3MgZm9yIGVhY2ggc3RvcmUuIEl0IGNhbiBhbHNvIGJlIGNvbmZpZ3VyZWQgZm9yIHRoZSBlbnRpcmUgc2VydmVyIGlmIHlvdSBoYXZlIGFkbWluIHByaXZpbGVnZXMuPC9wPgo8cD5FYWNoIGUtbWFpbCBwcm92aWRlciBoYXMgZGlmZmVyZW50IGNvbmZpZ3VyYXRpb24sIHNvIHdlIGNhbid0IHByb3ZpZGUgeW91IHdpdGggZXhhY3Qgc2V0dXAsIGJ1dCBoZXJlJ3MgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIGdtYWlsOjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPlNNVFAgSG9zdDogc210cC5nbWFpbC5jb20KU01UUCBQb3J0OiA1ODcKU1NMIFByb3RvY29sOiBPTgpUTFMgUHJvdG9jb2w6IE9OClNNVFAgVXNlcm5hbWU6ICh5b3VyIEdtYWlsIHVzZXJuYW1lKQpTTVRQIFBhc3N3b3JkOiAoeW91ciBHbWFpbCBwYXNzd29yZCkKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PHA+Rm9yIGdtYWlsIGl0J3MgaW1wb3J0YW50IHRvIGFsbG93IGFjY2VzcyBmcm9tIGxlc3Mgc2VjdXJlIGFwcHMuIFRvIGVuYWJsZSBnbyB0bzogTWFuYWdlIFlvdXIgR29vZ2xlIEFjY291bnQgJmd0OyBTZWN1cml0eSAmZ3Q7IEFsbG93IExlc3MgU2VjdXJlIEFwcHMgKE9uKS4gQWxzbyBub3RlIEdvb2dsZSBtYXkgYXV0b21hdGljYWxseSB0dXJuIG9mZiB0aGlzIHNldHRpbmcgaWYgaXTigJlzIG5vdCBiZWluZyB1c2VkLiBJZiB5b3VyIHNtdHAgaGFzIHN0b3BwZWQgd29ya2luZywgY2hlY2sgdGhpcyBzZXR0aW5nIGlzIG5vdCBvZmYuPC9wPgo8cD5JZiBieSBhbnkgY2hhbmNlIHlvdSBoYXZlIDItc3RlcCB2ZXJpZmljYXRpb24gYWRkZWQgdG8geW91ciBnbWFpbCBhY2NvdW50LCA8YSBocmVmPSJodHRwczovL3N1cHBvcnQuZ29vZ2xlLmNvbS9tYWlsL2Fuc3dlci8xODU4MzM/aGw9ZW4iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnZpc2l0IHRoaXMgYXJ0aWNsZTxPdXRib3VuZExpbmsvPjwvYT4uPC9wPgo8cD5Vc2UgdGhlIHRlc3QgZW1haWwgZmVhdHVyZSBpbiBCVENQYXkgdG8gdmVyaWZ5IHlvdXIgZW1haWxzIGFyZSBiZWluZyBzZW50IHByb3Blcmx5LiBJZiB5b3UgYXJlIHNlZWtpbmcgYSBtb3JlIHJlbGlhYmxlIHNtdHAgc2VydmljZSBmb3IgeW91ciBidXNpbmVzcyBuZWVkcywgY29uc2lkZXIgdXNpbmcgYSBkZWRpY2F0ZWQgbWFpbCBzZXJ2aWNlIGxpa2UgTWFpbGd1bi48L3A+CjxwPk1haW50ZW5hbmNlIGZlYXR1cmUgcmVxdWlyZXMgYWNjZXNzIHRvIFNTSCBwcm9wZXJseSBjb25maWd1cmVkIGluIEJUQ1BheVNlcnZlciBjb25maWd1cmF0aW9uPC9wPgo8aDMgaWQ9ImVycm9yLW1haW50ZW5hbmNlLWZlYXR1cmUtcmVxdWlyZXMtYWNjZXNzLXRvLXNzaC1wcm9wZXJseS1jb25maWd1cmVkLWluLWJ0Y3BheXNlcnZlci1jb25maWd1cmF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Vycm9yLW1haW50ZW5hbmNlLWZlYXR1cmUtcmVxdWlyZXMtYWNjZXNzLXRvLXNzaC1wcm9wZXJseS1jb25maWd1cmVkLWluLWJ0Y3BheXNlcnZlci1jb25maWd1cmF0aW9uIj4jPC9hPiBFcnJvcjogTWFpbnRlbmFuY2UgZmVhdHVyZSByZXF1aXJlcyBhY2Nlc3MgdG8gU1NIIHByb3Blcmx5IGNvbmZpZ3VyZWQgaW4gQlRDUGF5U2VydmVyIGNvbmZpZ3VyYXRpb248L2gzPgo8cD5Tb21ldGltZXMgYW4gaXNzdWUgd2l0aCBEb2NrZXIgY2FuIHRlbXBvcmFyaWx5IGNhdXNlIHlvdXIgQlRDUGF5IFNlcnZlcidzIG1haW50ZW5hbmNlIGZlYXR1cmVzIHRvIGJlIG1pc2NvbmZpZ3VyZWQuIFRoaXMgaXNzdWUgaXMgdHlwaWNhbGx5IGZpeGVkIGJ5IHJlc3RhcnRpbmcgeW91ciBCVENQYXkgU2VydmVyLiBVbmZvcnR1bmF0ZWx5IHdoZW4gdGhpcyBlcnJvciBhcHBlYXJzIGluIHRoZSBpbnRlcmZhY2UsIHRoZSByZXN0YXJ0IGJ1dHRvbiB3aWxsIGJlIGRpc2FibGVkLiBZb3Ugd2lsbCBuZWVkIHRvIDxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jaG93LXRvLXJlc3RhcnQtYnRjcGF5LXNlcnZlciI+cmVzdGFydCB1c2luZyBzc2g8L1JvdXRlckxpbms+IHRvIHJlc29sdmUgdGhlIGlzc3VlLjwvcD4KPGgzIGlkPSJlcnJvci15b3VyLWxvY2FsLWNoYW5nZXMtdG8tdGhlLWZvbGxvd2luZy1maWxlcy13b3VsZC1iZS1vdmVyd3JpdHRlbi1ieS1tZXJnZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNlcnJvci15b3VyLWxvY2FsLWNoYW5nZXMtdG8tdGhlLWZvbGxvd2luZy1maWxlcy13b3VsZC1iZS1vdmVyd3JpdHRlbi1ieS1tZXJnZSI+IzwvYT4gRXJyb3I6IFlvdXIgbG9jYWwgY2hhbmdlcyB0byB0aGUgZm9sbG93aW5nIGZpbGVzIHdvdWxkIGJlIG92ZXJ3cml0dGVuIGJ5IG1lcmdlPC9oMz4KPHA+U29tZXRpbWVzLCBhbiBhY2NpZGVudGFsbHkgZWRpdGVkIGZpbGUgY2FuIGJyZWFrIHRoZSB1cGRhdGUgbWVjaGFuaXNtIHdpdGggdGhlIGZvbGxvd2luZyBlcnJvcjo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLWJhc2ggZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCI+PGNvZGU+ZXJyb3I6IFlvdXIgPHNwYW4gY2xhc3M9InRva2VuIGJ1aWx0aW4gY2xhc3MtbmFtZSI+bG9jYWw8L3NwYW4+IGNoYW5nZXMgdG8gdGhlIGZvbGxvd2luZyBmaWxlcyB3b3VsZCBiZSBvdmVyd3JpdHRlbiBieSBtZXJnZToKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PHA+VG8gZml4IHRoZSB0aGlzLCA8YSBocmVmPSIjaG93LXRvLXNzaC1pbnRvLW15LWJ0Y3BheS1ydW5uaW5nLW9uLXZwcyI+c3NoIGludG8geW91ciBzZXJ2ZXI8L2E+IGFuZCBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kczo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLWJhc2ggZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCI+PGNvZGU+PHNwYW4gY2xhc3M9InRva2VuIGZ1bmN0aW9uIj5zdWRvPC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPnN1PC9zcGFuPiAtCjxzcGFuIGNsYXNzPSJ0b2tlbiBidWlsdGluIGNsYXNzLW5hbWUiPmNkPC9zcGFuPiBidGNwYXlzZXJ2ZXItZG9ja2VyCjxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+Z2l0PC9zcGFuPiByZXNldCAtLWhhcmQgb3JpZ2luL21hc3Rlcgo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48aDMgaWQ9ImVycm9yLWJ0Y3BheS1zc2hrZXlmaWxlLWlzLW5vdC1zZXQtd2hlbi1ydW5uaW5nLXRoZS1kb2NrZXItaW5zdGFsbC1vci11bmFibGUtdG8tdXBkYXRlLXRocm91Z2gtc2VydmVyLXNldHRpbmdzLW1haW50ZW5hbmNlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Vycm9yLWJ0Y3BheS1zc2hrZXlmaWxlLWlzLW5vdC1zZXQtd2hlbi1ydW5uaW5nLXRoZS1kb2NrZXItaW5zdGFsbC1vci11bmFibGUtdG8tdXBkYXRlLXRocm91Z2gtc2VydmVyLXNldHRpbmdzLW1haW50ZW5hbmNlIj4jPC9hPiBFcnJvcjogQlRDUEFZX1NTSEtFWUZJTEUgaXMgbm90IHNldCB3aGVuIHJ1bm5pbmcgdGhlIGRvY2tlciBpbnN0YWxsLCBvciB1bmFibGUgdG8gdXBkYXRlIHRocm91Z2ggU2VydmVyIFNldHRpbmdzIC8gTWFpbnRlbmFuY2U8L2gzPgo8cD5Zb3UgbWF5IHNlZSBzdWNoIHRoZSBmb2xsb3dpbmcgbWVzc2FnZSB3aGVuIHlvdSBydW4geW91ciBkb2NrZXItY29tcG9zZSAoZWl0aGVyIHZpYSA8Y29kZT5idGNwYXktdXAuc2g8L2NvZGU+IG9yIDxjb2RlPmJ0Y3BheS1zZXR1cC5zaDwvY29kZT4pOjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS1iYXNoIj48Y29kZT5XQVJOSU5HOiBUaGUgQlRDUEFZX1NTSEtFWUZJTEUgdmFyaWFibGUgaXMgbm90IHNldC4gRGVmYXVsdGluZyB0byBhIGJsYW5rIHN0cmluZy4KV0FSTklORzogVGhlIEJUQ1BBWV9TU0hUUlVTVEVERklOR0VSUFJJTlRTIHZhcmlhYmxlIGlzIG5vdCBzZXQuIERlZmF1bHRpbmcgdG8gYSBibGFuayBzdHJpbmcuCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxwPjxjb2RlPkJUQ1BheSBTZXJ2ZXI8L2NvZGU+IHJlcXVpcmVzIFNTSCBhY2Nlc3MsIHRvIGFsbG93IHlvdSB0byBwZXJmb3JtIHRoZSBmb2xsb3dpbmcgdGFza3MgZnJvbSB0aGUgZnJvbnQtZW5kOjwvcD4KPHVsPgo8bGk+VXBkYXRpbmcgdGhlIHNlcnZlcjwvbGk+CjxsaT5DaGFuZ2luZyB0aGUgZG9tYWluIG5hbWUgb2YgdGhlIHNlcnZlcjwvbGk+CjwvdWw+CjxwPllvdSBjYW4gcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBsaW5lIHRvIGdpdmUgYWNjZXNzIHRvIEJUQ1BheSB0byB5b3VyIHNlcnZlciB2aWEgU1NILjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS1iYXNoIj48Y29kZT48c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPnN1ZG88L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+c3U8L3NwYW4+IC0KPHNwYW4gY2xhc3M9InRva2VuIGJ1aWx0aW4gY2xhc3MtbmFtZSI+Y2Q8L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiB2YXJpYWJsZSI+JEJUQ1BBWV9CQVNFX0RJUkVDVE9SWTwvc3Bhbj4vYnRjcGF5c2VydmVyLWRvY2tlcgo8c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPmdpdDwvc3Bhbj4gY2hlY2tvdXQgbWFzdGVyCjxzcGFuIGNsYXNzPSJ0b2tlbiBjb21tZW50Ij4jIFNldHVwIFNTSCBhY2Nlc3MgdmlhIHByaXZhdGUga2V5PC9zcGFuPgpzc2gta2V5Z2VuIC10IHJzYSAtZiAvcm9vdC8uc3NoL2lkX3JzYV9idGNwYXkgLXEgLVAgPHNwYW4gY2xhc3M9InRva2VuIHN0cmluZyI+IiI8L3NwYW4+IC1tIFBFTQo8c3BhbiBjbGFzcz0idG9rZW4gYnVpbHRpbiBjbGFzcy1uYW1lIj5lY2hvPC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gc3RyaW5nIj4iIyBLZXkgdXNlZCBieSBCVENQYXkgU2VydmVyIjwvc3Bhbj4gPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj4+Pjwvc3Bhbj4gL3Jvb3QvLnNzaC9hdXRob3JpemVkX2tleXMKPHNwYW4gY2xhc3M9InRva2VuIGZ1bmN0aW9uIj5jYXQ8L3NwYW4+IC9yb290Ly5zc2gvaWRfcnNhX2J0Y3BheS5wdWIgPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj4+Pjwvc3Bhbj4gL3Jvb3QvLnNzaC9hdXRob3JpemVkX2tleXMKPHNwYW4gY2xhc3M9InRva2VuIGFzc2lnbi1sZWZ0IHZhcmlhYmxlIj5CVENQQVlfSE9TVF9TU0hLRVlGSUxFPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBvcGVyYXRvciI+PTwvc3Bhbj4vcm9vdC8uc3NoL2lkX3JzYV9idGNwYXkKPHNwYW4gY2xhc3M9InRva2VuIGJ1aWx0aW4gY2xhc3MtbmFtZSI+Ljwvc3Bhbj4gLi9idGNwYXktc2V0dXAuc2ggLWkKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGgyIGlkPSJ0aGVtZS1jdXN0b21pemF0aW9uLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdGhlbWUtY3VzdG9taXphdGlvbi0yIj4jPC9hPiBUaGVtZSAvIEN1c3RvbWl6YXRpb248L2gyPgo8aDMgaWQ9Imhvdy10by1jdXN0b21pemUtbXktYnRjcGF5LXRoZW1lLXN0eWxlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by1jdXN0b21pemUtbXktYnRjcGF5LXRoZW1lLXN0eWxlIj4jPC9hPiBIb3cgdG8gY3VzdG9taXplIG15IEJUQ1BheSB0aGVtZSBzdHlsZT88L2gzPgo8cD5UaGVyZSBhcmUgdHdvIHdheXMgdG8gY3VzdG9taXplIHRoZSB0aGVtZSBvZiB5b3VyIEJUQ1BheS4KVGhlIGVhc3kgd2F5IGlzIHRvIGNob29zZSBvciBwcm92aWRlIGN1c3RvbSB0aGVtZSBwcmVmZXJlbmNlcyBpbiB5b3VyIEJUQ1BheSBhcyBleHBsYWluZWQgaW4gdGhlIDxSb3V0ZXJMaW5rIHRvPSIvVGhlbWUvIj5UaGVtZSBkb2N1bWVudGF0aW9uPC9Sb3V0ZXJMaW5rPi48L3A+CjxwPkZvciBhZHZhbmNlZCB0aGVtZSBjaGFuZ2VzLCB5b3UnbGwgbW9zdCBsaWtlbHkgbmVlZCB0byBmb3JrICBCVENQYXkgcmVwb3NpdG9yeSBhbmQgYXBwbHkgZGVzaXJlZCBkZXNpZ24gY2hhbmdlcy4gQnVpbGQgYW5kIHB1Ymxpc2ggdGhlIGRvY2tlciBpbWFnZSB0byBEb2NrZXIgSHViLiBTZXQgdGhlIDxjb2RlPkJUQ1BBWV9JTUFHRTwvY29kZT4gZW52aXJvbm1lbnQgdmFyaWFibGUgdG8geW91ciBkb2NrZXIgaW1hZ2UgdGFnKDxjb2RlPmV4cG9ydCBCVENQQVlfSU1BR0U9JnF1b3Q7eW91ciBjdXN0b20gYnRjcGF5IGRvY2tlciBpbWFnZSZxdW90OzwvY29kZT4pIGFuZCBydW4gdGhlIHNldHVwICg8Y29kZT4uIC4vYnRjcGF5LXNldHVwLnNoIC1pPC9jb2RlPikgYXMgdXN1YWwgZnJvbSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnRjcGF5c2VydmVyL2J0Y3BheXNlcnZlci1kb2NrZXIiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkJUQ1BheSBEb2NrZXI8T3V0Ym91bmRMaW5rLz48L2E+LiBNb2RpZnkgZ2VuZXJhdGVkIGRvY2tlciBjb21wb3NlIHRvIHVzZSB5b3VyIGN1c3RvbSBkb2NrZXIgaW1hZ2UuPC9wPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgd2FybmluZyI+PHAgY2xhc3M9ImN1c3RvbS1ibG9jay10aXRsZSI+V0FSTklORzwvcD4KPHA+QSBmb3JrZWQgQlRDUGF5IFNlcnZlciB3aWxsIG5lZWQgdG8gY3JlYXRlIGEgbmV3IGltYWdlIG1hbnVhbGx5IGFuZCBmb2xsb3cgdGhlc2Ugc3RlcHMgZm9yIEVBQ0ggQlRDUGF5IHVwZGF0ZSBzbyBpdCBpcyBhZHZpc2VkIHRvIHN0aWNrIHdpdGggdGhlIGRlZmF1bHQgc2V0dXAgYW5kIHRoZW1lIG9wdGlvbnMuPC9wPgo8L2Rpdj4KPGgzIGlkPSJob3ctdG8tbW9kaWZ5LXRoZS1jaGVja291dC1wYWdlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by1tb2RpZnktdGhlLWNoZWNrb3V0LXBhZ2UiPiM8L2E+IEhvdyB0byBtb2RpZnkgdGhlIGNoZWNrb3V0IHBhZ2U/PC9oMz4KPHA+WW91IGNhbiBlYXNpbHkgY2hhbmdlIHRoZSBhcHBlYXJhbmNlIG9mIHlvdXIgQlRDUGF5J3MgY2hlY2tvdXQgcGFnZSBieSBmb2xsb3dpbmcgdGhlIDxSb3V0ZXJMaW5rIHRvPSIvVGhlbWUvI2NoZWNrb3V0LXBhZ2UtdGhlbWUiPmluc3RydWN0aW9ucyBoZXJlPC9Sb3V0ZXJMaW5rPjwvcD4KPGgzIGlkPSJob3ctdG8tYWRkLWdvb2dsZS1hbmFseXRpY3MtY29kZS10by1idGNwYXkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LXRvLWFkZC1nb29nbGUtYW5hbHl0aWNzLWNvZGUtdG8tYnRjcGF5Ij4jPC9hPiBIb3cgdG8gYWRkIEdvb2dsZSBBbmFseXRpY3MgY29kZSB0byBCVENQYXk/PC9oMz4KPHA+WW91IHNob3VsZCBiZSBhYmxlIHRvIGRvIHdoYXQgeW91IHdhbnQgYnkgaW5qZWN0aW5nIHlvdXIgR0EgY29kZSB0byA8Y29kZT5+L3d3d3Jvb3QvY2hlY2tvdXQvanMvY29yZS5qcy48L2NvZGU+IFRoaXMgbWlnaHQgYmUgdGhlIGVhc2llc3Qgd2F5IGJ1dCB5b3UgaGF2ZSB0byByZWRvIGl0IGV2ZXJ5IHRpbWUgeW91IHVwZGF0ZSBCVENQYXkgdG8gdGhlIGxhdGVzdCB2ZXJzaW9uLiBUaGVuIHlvdSB3b27igJl0IGhhdmUgdGhlIGhhc3NsZSBvZiBmb3JraW5nIHRoZSBjb2RlLCBkZXBsb3lpbmcgaXQgbWFudWFsbHkuIEV2ZXJ5IHRpbWUgdGhlcmUgaXMgYW4gdXBkYXRlLiBKdXN0IGRvIHRoZSBkb2NrZXIgdXBkYXRlIGFuZCBhZGQgdGhlIHNhbWUgbGluZXMgdG8gdGhlIC5qcyBmaWxlLjwvcD4KPGgyIGlkPSJwb2xpY2llcy0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3BvbGljaWVzLTIiPiM8L2E+IFBvbGljaWVzPC9oMj4KPGgzIGlkPSJob3ctdG8tYWxsb3ctcmVnaXN0cmF0aW9uLW9uLW15LWJ0Y3BheS1zZXJ2ZXIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaG93LXRvLWFsbG93LXJlZ2lzdHJhdGlvbi1vbi1teS1idGNwYXktc2VydmVyIj4jPC9hPiBIb3cgdG8gYWxsb3cgcmVnaXN0cmF0aW9uIG9uIG15IEJUQ1BheSBTZXJ2ZXI/PC9oMz4KPHA+VG8gYWxsb3cgb3RoZXIgdXNlcnMgdG8gcmVnaXN0ZXIgYW5kIHVzZSB5b3VyIHNlcnZlciwgaW4gU2VydmVyIFNldHRpbmdzICZndDsgUG9saWNpZXMgZW5hYmxlIHJlZ2lzdHJhdGlvbi4gSWYgeW91IDxSb3V0ZXJMaW5rIHRvPSIvRkFRL0ZBUS1TZXJ2ZXJTZXR0aW5ncy8jaG93LXRvLWNvbmZpZ3VyZS1zbXRwLXNldHRpbmdzLWluLWJ0Y3BheSI+Y29uZmlndXJlZCBTTVRQIHByb3Blcmx5PC9Sb3V0ZXJMaW5rPiwgeW91IGNhbiByZXF1ZXN0IHVzZXJzIHRvIHByb3ZpZGUgZS1tYWlsIGNvbmZpcm1hdGlvbiB0byBwcmV2ZW50IHNwYW0gb3IgYm90cyBmcm9tIHJlZ2lzdGVyaW5nIG9uIHlvdXIgaW5zdGFuY2UuPC9wPgo8aDMgaWQ9Imhvdy10by1oaWRlLW15LWJ0Y3BheS1zZXJ2ZXItZnJvbS1zZWFyY2gtZW5naW5lcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctdG8taGlkZS1teS1idGNwYXktc2VydmVyLWZyb20tc2VhcmNoLWVuZ2luZXMiPiM8L2E+IEhvdyB0byBoaWRlIG15IEJUQ1BheSBTZXJ2ZXIgZnJvbSBTZWFyY2ggRW5naW5lcz88L2gzPgo8cD5EaXNjb3VyYWdpbmcgc2VhcmNoIGVuZ2luZXMgZnJvbSBpbmRleGluZyB5b3VyIHNpdGUgaW4gU2VydmVyIFNldHRpbmdzICZndDsgUG9saWNpZXMsIGFkZHMgPGNvZGU+Jmx0O21ldGEgbmFtZT0mcXVvdDtyb2JvdHMmcXVvdDsgY29udGVudD0mcXVvdDtub2luZGV4JnF1b3Q7Jmd0OzwvY29kZT4gdG8geW91ciBzZXJ2ZXIgaGVhZGVyLCB3aGljaCBpbmZvcm1zIHNlYXJjaCBlbmdpbmVzIG5vdCB0byBpbmRleCB5b3VyIHBhZ2VzLjwvcD4KPHA+SXQgaXMgdXAgdG8gc2VhcmNoIGVuZ2luZXMgdG8gaG9ub3IgdGhpcyByZXF1ZXN0LCBhbmQgbWF5IHRha2UgdGltZSBmb3IgeW91ciBwYWdlcyB0byBkaXNhcHBlYXIgY29tcGxldGVseS4gVW5mb3J0dW5hdGVseSwgdGhlIGV4YWN0IHRpbWUgaXMgYmV5b25kIG91ciBjb250cm9sLCBpdCBkZXBlbmRzIG9uIGNyYXdsIGJvdHMgb2YgdGhlIHBhcnRpY3VsYXIgc2VhcmNoIGVuZ2luZSBsaWtlIEdvb2dsZS48L3A+CjxoMiBpZD0ic2VydmljZXMtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzZXJ2aWNlcy0yIj4jPC9hPiBTZXJ2aWNlczwvaDI+CjxoMyBpZD0iaG93LXRvLXJlbW90ZWx5LWNvbm5lY3QtdG8tbXktYnRjcGF5LWZ1bGwtbm9kZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNob3ctdG8tcmVtb3RlbHktY29ubmVjdC10by1teS1idGNwYXktZnVsbC1ub2RlIj4jPC9hPiBIb3cgdG8gcmVtb3RlbHkgY29ubmVjdCB0byBteSBCVENQYXkgZnVsbCBub2RlPzwvaDM+CjxwPklmIHlvdSdyZSB1c2luZyBhbiBleHRlcm5hbCB3YWxsZXQgd2hpY2ggYWxsb3dzIEJUQy1QMlAgY29ubmVjdGlvbiwgeW91IGNhbiBlYXNpbHkgY29ubmVjdCBpdCB0byB5b3VyIEJUQ1BheSBmdWxsIG5vZGUuIEJ5IGRvaW5nIHRoaXMsIHlvdSBhdm9pZCBsZWFraW5nIGluZm9ybWF0aW9uIHRvIHRoaXJkLXBhcnR5IHNlcnZlcnMgYW5kIGFyZSBzb2xlbHkgcmVseWluZyBvbiB5b3VyIG93biBmdWxsIG5vZGUuClRvIGNvbm5lY3QgdG8gYSBjb21wYXRpYmxlIEJUQy1QMlAgd2FsbGV0LCBnbyB0byA8c3Ryb25nPlNlcnZlciBTZXR0aW5ncyAmZ3Q7IFNlcnZpY2VzICZndDsgRnVsbCBub2RlIFAyUDwvc3Ryb25nPiBSZXZlYWwgdGhlIFFSIGNvZGUgYW5kIHNjYW4gaXQgd2l0aCBhIEJUQy1QMlAgY29tcGF0aWJsZSB3YWxsZXQsIG9yIGlucHV0IGl0IGJ5IGNvcHktcGFzdGluZyBpdC48L3A+CjxmaWd1cmU+PGltZyBzcmM9Ii4uL2ltZy9CVEMtUDJQLnBuZyIgYWx0PSJCVEMtUDJQIj48L2ZpZ3VyZT4KPHA+SWYgeW91IGRvIG5vdCBzZWUgRnVsbCBub2RlIFAyUCBpbiB5b3VyIFNlcnZpY2VzLCB5b3UgcHJvYmFibHkgaGF2ZSB0byA8Um91dGVyTGluayB0bz0iL0ZBUS9GQVEtRGVwbG95bWVudC8jaG93LWRvLWktYWN0aXZhdGUtdG9yLW9uLW15LWJ0Y3BheS1zZXJ2ZXIiPmFjdGl2YXRlIFRvciBvbiB5b3VyIHNlcnZlcjwvUm91dGVyTGluaz4uPC9wPgo8aDIgaWQ9ImZpbGVzLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZmlsZXMtMiI+IzwvYT4gRmlsZXM8L2gyPgo8aDMgaWQ9Imhvdy10by11cGxvYWQtZmlsZXMtdG8tYnRjcGF5Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvdy10by11cGxvYWQtZmlsZXMtdG8tYnRjcGF5Ij4jPC9hPiBIb3cgdG8gdXBsb2FkIGZpbGVzIHRvIEJUQ1BheT88L2gzPgo8cD5UbyB1cGxvYWQgZmlsZXMgdG8geW91ciBCVENQYXkgU2VydmVyIGluc3RhbmNlLCBmaXJzdCB1bmRlciBTZXJ2ZXIgU2V0dGluZ3MgJmd0OyBTZXJ2aWNlcywgZW5hYmxlIHRoZSBFeHRlcm5hbCBTdG9yYWdlIGZlYXR1cmUgYW5kIGNob29zZSB3aGljaCBzdG9yYWdlIHNlcnZpY2UgcHJvdmlkZXIgeW91IHdvdWxkIGxpa2UgdG8gdXNlLiBOZXh0LCBnbyB0byBTZXJ2ZXIgU2V0dGluZ3MgJmd0OyBGaWxlcyB0byBicm93c2UgYW5kIHVwbG9hZCBsb2NhbCBmaWxlcy4gRGVwZW5kaW5nIG9uIHRoZSBsaW1pdGF0aW9ucyBvZiB5b3VyIHN0b3JhZ2Ugc3lzdGVtLCB5b3UgbWF5IGhhdmUgZGlmZmljdWx0eSB1cGxvYWRpbmcgbGFyZ2UgZmlsZXMuPC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}