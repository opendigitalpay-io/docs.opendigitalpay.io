{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/PullPayments.md?vue&type=template&id=1c554175&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/PullPayments.md","mtime":1617331587408},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJwdWxsLXBheW1lbnRzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3B1bGwtcGF5bWVudHMiPiM8L2E+IFB1bGwgcGF5bWVudHM8L2gxPgo8aDIgaWQ9ImludHJvZHVjdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNpbnRyb2R1Y3Rpb24iPiM8L2E+IEludHJvZHVjdGlvbjwvaDI+CjxwPlRyYWRpdGlvbmFsbHksIHRvIG1ha2UgYSBCaXRjb2luIHBheW1lbnQsIGEgcmVjZWl2ZXIgc2hhcmVzIHRoZWlyIGJpdGNvaW4gYWRkcmVzcyBhbmQgdGhlIHNlbmRlciBsYXRlciBzZW5kcyBtb25leSB0byB0aGlzIGFkZHJlc3MuClN1Y2ggc3lzdGVtIGlzIGNhbGxlZCA8Y29kZT5QdXNoIHBheW1lbnQ8L2NvZGU+IGFzIHRoZSBzZW5kZXIgaW5pdGlhdGVzIHRoZSBwYXltZW50IHdoaWxlIHRoZSByZWNlaXZlciBtYXkgYmUgdW5hdmFpbGFibGUsIGluIGVmZmVjdCA8Y29kZT5wdXNoaW5nPC9jb2RlPiB0aGUgcGF5bWVudCB0byB0aGUgcmVjZWl2ZXIuPC9wPgo8cD5Ib3dldmVyLCB3aGF0IGFib3V0IHJldmVyc2luZyB0aGUgcm9sZT88L3A+CjxwPldoYXQgaWYsIGluc3RlYWQgb2YgYSBzZW5kZXIgPGNvZGU+cHVzaGluZzwvY29kZT4gdGhlIHBheW1lbnQsIHRoZSBzZW5kZXIgYWxsb3dzIHRoZSByZWNlaXZlciB0byA8Y29kZT5wdWxsPC9jb2RlPiB0aGUgcGF5bWVudCBhdCBhIHRpbWUgdGhlIHJlY2VpdmVyIHNlZW1zIGZpdD8KVGhpcyBpcyB0aGUgY29uY2VwdCBvZiA8Y29kZT5QdWxsIHBheW1lbnQ8L2NvZGU+LiBUaGlzIGFsbG93cyBzZXZlcmFsIG5ldyBhcHBsaWNhdGlvbnMgc3VjaCBhczo8L3A+Cjx1bD4KPGxpPkEgc3Vic2NyaXB0aW9uIHNlcnZpY2UgKHdoZXJlIHRoZSBzdWJzY3JpYmVyIGFsbG93cyB0aGUgc2VydmljZSB0byBwdWxsIG1vbmV5IGV2ZXJ5IHggYW1vdW50IG9mIHRpbWUpPC9saT4KPGxpPlJlZnVuZHMgKHdoZXJlIHRoZSBtZXJjaGFudCBhbGxvd3MgdGhlIGN1c3RvbWVyIHRvIHB1bGwgdGhlIHJlZnVuZCBtb25leSB0byBoaXMgd2FsbGV0IHdoZW4gaXQgc2VlbXMgZml0KTwvbGk+CjxsaT5UaW1lLWJhc2VkIGJpbGxpbmcgZm9yIGZyZWVsYW5jZXJzICh3aGVyZSB0aGUgcGVyc29uIGhpcmluZyBhbGxvd3MgdGhlIGZyZWVsYW5jZSB0byBwdWxsIG1vbmV5IHRvIGhpcyB3YWxsZXQgYXMgdGltZSBnZXQgcmVwb3J0ZWQpPC9saT4KPGxpPlBhdHJvbmFnZSAod2hlcmUgdGhlIHBhdHJvbiBhbGxvd3MgdGhlIHJlY2lwaWVudCB0byBwdWxsIG1vbmV5IGV2ZXJ5IG1vbnRoIHRvIGNvbnRpbnVlIHN1cHBvcnRpbmcgdGhlaXIgd29yayk8L2xpPgo8bGk+QXV0b21hdGljIHNlbGxpbmcgKHdoZXJlIGEgY3VzdG9tZXIgb2YgYW4gZXhjaGFuZ2Ugd291bGQgYWxsb3cgYW4gZXhjaGFuZ2UgdG8gcHVsbCBtb25leSBmcm9tIHRoZWlyIHdhbGxldCB0byBhdXRvbWF0aWNhbGx5IHNlbGwgZXZlcnkgbW9udGgpPC9saT4KPGxpPkJhbGFuY2Ugd2l0aGRyYXcgc3lzdGVtICh3aGVyZSBhIGhpZ2gtdm9sdW1lIHNlcnZpY2UgYWxsb3dzIHVzZXJzIHRvIHJlcXVlc3Qgd2l0aGRyYXdhbHMgZnJvbSB0aGVpciBiYWxhbmNlLCB0aGUgc2VydmljZSBjYW4gdGhlbiBlYXNpbHkgYmF0Y2ggYWxsIHRoZSBwYXlvdXRzIHRvIG1hbnkgdXNlcnMsIGF0IGZpeGVkIGludGVydmFscyk8L2xpPgo8L3VsPgo8cD5Zb3UgY2FuIGFsc28gZm9sbG93IHRoaXMgdmlkZW86PC9wPgo8YSBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PS1lOGxQZDlOdFBzIiBjbGFzcz0ieXRFbWJlZCIgZGF0YS1pZD0iLWU4bFBkOU50UHMiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL2ltZy55b3V0dWJlLmNvbS92aS8tZThsUGQ5TnRQcy9ocWRlZmF1bHQuanBnKTsiPgogIDxpZnJhbWUKICAgIHRpdGxlPSJZb3VUdWJlIgogICAgZGF0YS1zcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUtbm9jb29raWUuY29tL2VtYmVkLy1lOGxQZDlOdFBzPyZhdXRvcGxheT0xJmF1dG9oaWRlPTEmbW9kZXN0YnJhbmRpbmc9MSZjb2xvcj13aGl0ZSZyZWw9MCIKICAgIGZyYW1lYm9yZGVyPSIwIgogICAgYWxsb3c9ImF1dG9wbGF5O2VuY3J5cHRlZC1tZWRpYTtwaWN0dXJlLWluLXBpY3R1cmUiCiAgICBhbGxvd2Z1bGxzY3JlZW4KICA+PC9pZnJhbWU+CjwvYT4KPGgyIGlkPSJjb25jZXB0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2NvbmNlcHQiPiM8L2E+IENvbmNlcHQ8L2gyPgo8cD5XaGVuIGEgc2VuZGVyIGNvbmZpZ3VyZXMgYSA8Y29kZT5QdWxsIHBheW1lbnQ8L2NvZGU+LCB0aGV5IGNhbiBjb25maWd1cmUgYSBudW1iZXIgb2YgcHJvcGVydGllczo8L3A+Cjx1bD4KPGxpPlN0YXJ0IGRhdGU8L2xpPgo8bGk+RW5kIGRhdGUgKG9wdGlvbmFsKTwvbGk+CjxsaT5BIHBlcmlvZCAob3B0aW9uYWwpPC9saT4KPGxpPkEgbGltaXQgYW1vdW50PC9saT4KPGxpPkEgdW5pdCAoc3VjaCBhcyBVU0QsIEJUQywgSG91cnMpPC9saT4KPGxpPkF2YWlsYWJsZSBwYXltZW50IG1ldGhvZHM8L2xpPgo8L3VsPgo8cD5BZnRlciB0aGlzLCB0aGUgc2VuZGVyIGNhbiA8c3Ryb25nPnNoYXJlIHRoZSBwdWxsIHBheW1lbnQ8L3N0cm9uZz4gdXNpbmcgYSBsaW5rIHdpdGggdGhlIHJlY2VpdmVyLCBhbGxvd2luZyB0aGUgcmVjZWl2ZXIgdG8gPGNvZGU+Y3JlYXRlIGEgcGF5b3V0PC9jb2RlPi4KVGhlIHJlY2VpdmVyIHdpbGwgY2hvb3NlIGZvciB0aGVpciBwYXlvdXQ6PC9wPgo8dWw+CjxsaT5XaGljaCBwYXltZW50IG1ldGhvZCB0byB1c2U8L2xpPgo8bGk+V2hlcmUgdG8gc2VuZCB0aGUgbW9uZXk8L2xpPgo8L3VsPgo8cD5PbmNlIGEgcGF5b3V0IGlzIGNyZWF0ZWQsIGl0IHdpbGwgY291bnQgdG93YXJkIHRoZSA8Y29kZT5wdWxsIHBheW1lbnQncyBsaW1pdDwvY29kZT4gZm9yIHRoZSBjdXJyZW50IDxjb2RlPnBlcmlvZDwvY29kZT4uClRoZSBzZW5kZXIgd2lsbCB0aGVuIGFwcHJvdmUgdGhlIHBheW91dCBieSBzZXR0aW5nIHRoZSA8Y29kZT5yYXRlPC9jb2RlPiBpbiB3aGljaCB0aGUgcGF5b3V0IHdpbGwgYmUgc2VudCwgYW5kIHByb2NlZWQgdG8gcGF5bWVudC48L3A+CjxwPkZvciB0aGUgc2VuZGVyLCB3ZSBwcm92aWRlIGFuIGVhc3kgdG8gdXNlIHdheSB0byBiYXRjaCB0aGUgcGF5bWVudCBvZiBzZXZlcmFsIHBheW91dHMgZnJvbSB0aGUgPFJvdXRlckxpbmsgdG89Ii9XYWxsZXQvIj5CVENQYXkgSW50ZXJuYWwgV2FsbGV0PC9Sb3V0ZXJMaW5rPi48L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLSBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS10ZXh0Ij48Y29kZT4KICstLS0tLS0tLS0tKyAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICAgKy0tLS0tLS0tLS0tLSsKIHwgICAgICAgICAgfCAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgfCAgICAgICAgICAgIHwKIHwgIFNlbmRlciAgfCAgICAgICAgICAgfCAgIEJUQ1BheSBTZXJ2ZXIgICB8ICAgICAgICAgICAgfCAgUmVjZWl2ZXIgIHwKIHwgICAgICAgICAgfCAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgfCAgICAgICAgICAgIHwKICstLS0tLS0tLS0tKyAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0rICAgICAgICAgICAgKy0tLS0tLS0tLS0tLSsKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICBDcmVhdGUgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSZndDsrICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICBQdWxsIHBheW1lbnQgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICBTaGFyZSAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJmd0OysKICAgICAgfCAgICAgICAgICBQdWxsIHBheW1lbnQgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICBDcmVhdGUgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICArJmx0Oy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICBQYXlvdXQgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgIEFwcHJvdmUgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSZndDsrICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYKICAgICAgfCAgICAgICAgIFBheW91dCAgICAgICAgICAgICB8CiAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICAgICB8ICAgICAgICAgUGF5ICAgICAgICAgICAgICAgIHwKICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSZndDsrCiAgICAgIHwgICAgICAgICBQYXlvdXQgICAgICAgICAgICAgfAogICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgIHYgICAgICAgICAgICAgICAgICAgICAgICAgICAgdgo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD5Ob3RlIHRoYXQgQlRDUGF5IFNlcnZlciBkb2VzIG5vdCBhcHByb3ZlIGFuZCBwYXkgYSBwYXlvdXQgYXV0b21hdGljYWxseS4gSW4gZnV0dXJlIHJlbGVhc2VzLCB3ZSB3aWxsIGxvb2sgaW50byBwYXlvdXRzIHdoaWNoIGFyZSBhcHByb3ZlZCB0byBiZSBwYWlkIG91dCBhdXRvbWF0aWNhbGx5IHVuZGVyIHRoZSBjb3JyZWN0IGNvbmRpdGlvbnMuCkluc3RlYWQsIGEgbm90aWZpY2F0aW9uIHdpbGwgYXBwZWFyIGZvciB0aGUgc2VuZGVyLCBnaXZpbmcgdGhlIHNlbmRlciB0aGUgY2hvaWNlIHRvIGFwcHJvdmUgYW5kIHBheSB0aGUgcGF5b3V0cy48L3A+CjxoMiBpZD0iZ3JlZW5maWVsZC1hcGkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZ3JlZW5maWVsZC1hcGkiPiM8L2E+IEdyZWVuZmllbGQgQVBJPC9oMj4KPHA+V2UgcHJvdmlkZSBhIGZ1bGwgQVBJIHRvIGJvdGggdGhlIHNlbmRlciBhbmQgcmVjZWl2ZXIgdGhhdCBpcyBkb2N1bWVudGVkIGluIHRoZSA8Y29kZT4vZG9jczwvY29kZT4gcGFnZSBvZiB5b3VyIGluc3RhbmNlLiAob3Igb24gb3VyIDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5idGNwYXlzZXJ2ZXIub3JnL0FQSS9HcmVlbmZpZWxkL3YxLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+cHVibGljIGxpbms8T3V0Ym91bmRMaW5rLz48L2E+IHBhZ2UpPC9wPgo8cD5TaW5jZSBvdXIgQVBJIGV4cG9zZXMgdGhlIGZ1bGwgY2FwYWJpbGl0eSBvZiBwdWxsIHBheW1lbnRzLCBhIHNlbmRlciBjYW4gYXV0b21hdGUgcGF5bWVudHMgZm9yIGhpcyBvd24gbmVlZC48L3A+CjxoMiBpZD0idXNlci1pbnRlcmZhY2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdXNlci1pbnRlcmZhY2UiPiM8L2E+IFVzZXIgaW50ZXJmYWNlPC9oMj4KPHA+VGhlIHVzZXIgaW50ZXJmYWNlIG9ubHkgYWxsb3dzIGEgc3Vic2V0IG9mIHdoYXQgaXMgcG9zc2libGUuPC9wPgo8aDMgaWQ9ImNyZWF0ZS1hLXB1bGwtcGF5bWVudCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjcmVhdGUtYS1wdWxsLXBheW1lbnQiPiM8L2E+IENyZWF0ZSBhIHB1bGwgcGF5bWVudDwvaDM+CjxvbD4KPGxpPkdvIHRvIHlvdXIgd2FsbGV0IHBhZ2UgLyBwdWxsIHBheW1lbnRzCjxpbWcgc3JjPSIuL2ltZy9wdWxsLXBheW1lbnRzLzEucG5nIiBhbHQ9IkJUQ1BheSBTZXJ2ZXIgUHVsbCBQYXltZW50IiB0aXRsZT0iQlRDUGF5IFNlcnZlciBQdWxsIFBheW1lbnQiPjwvbGk+CjxsaT5DbGljayBvbiA8Y29kZT5DcmVhdGUgYSBuZXcgcHVsbCBwYXltZW50PC9jb2RlPgo8aW1nIHNyYz0iLi9pbWcvcHVsbC1wYXltZW50cy8yLnBuZyIgYWx0PSJCVENQYXkgU2VydmVyIFB1bGwgUGF5bWVudCIgdGl0bGU9IkJUQ1BheSBTZXJ2ZXIgUHVsbCBQYXltZW50Ij48L2xpPgo8bGk+RmlsbCBvdXQgdGhlIHB1bGwgcGF5bWVudCBpbmZvcm1hdGlvbiwgY2xpY2sgPGNvZGU+Q3JlYXRlPC9jb2RlPgo8aW1nIHNyYz0iLi9pbWcvcHVsbC1wYXltZW50cy8zLnBuZyIgYWx0PSJCVENQYXkgU2VydmVyIFB1bGwgUGF5bWVudCIgdGl0bGU9IkJUQ1BheSBTZXJ2ZXIgUHVsbCBQYXltZW50Ij48L2xpPgo8bGk+R28gdG8gdGhlIHB1bGwgcGF5bWVudCBwYWdlIGJ5IGNsaWNraW5nIG9uIDxjb2RlPlZpZXc8L2NvZGU+PC9saT4KPGxpPlNoYXJlIHRoaXMgcGFnZSB3aXRoIHRoZSBwYXltZW50IHJlY2VpdmVyCjxpbWcgc3JjPSIuL2ltZy9wdWxsLXBheW1lbnRzLzQucG5nIiBhbHQ9IkJUQ1BheSBTZXJ2ZXIgUHVsbCBQYXltZW50IiB0aXRsZT0iQlRDUGF5IFNlcnZlciBQdWxsIFBheW1lbnQiPjwvbGk+CjxsaT5BcyB0aGUgcmVjZWl2ZXIsIGZpbGwgb3V0IGhvdyBtdWNoIDxjb2RlPlVTRDwvY29kZT4geW91IGNsYWltLCBhbmQgdG8gd2hpY2ggYWRkcmVzcyBzaG91bGQgdGhlIG1vbmV5IGJlIHNlbnQuCjxpbWcgc3JjPSIuL2ltZy9wdWxsLXBheW1lbnRzLzUucG5nIiBhbHQ9IkJUQ1BheSBTZXJ2ZXIgUHVsbCBQYXltZW50IiB0aXRsZT0iQlRDUGF5IFNlcnZlciBQdWxsIFBheW1lbnQiPjwvbGk+Cjwvb2w+CjxoMyBpZD0iYXBwcm92ZS1hbmQtcGF5LWEtcGF5b3V0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FwcHJvdmUtYW5kLXBheS1hLXBheW91dCI+IzwvYT4gQXBwcm92ZSBhbmQgcGF5IGEgcGF5b3V0PC9oMz4KPG9sPgo8bGk+VGhlIHNlbmRlciBnZXQgbm90aWZpZWQgd2hlbiB0aGUgcmVjZWl2ZXIgaXMgcHVsbGluZyBtb25leQo8aW1nIHNyYz0iLi9pbWcvcHVsbC1wYXltZW50cy82LnBuZyIgYWx0PSI2Ij48L2xpPgo8bGk+Q2xpY2tpbmcgb24gdGhlIG5vdGlmaWNhdGlvbiBicmluZ3MgdGhlIHNlbmRlciB0byBhIHBhZ2UgbGlzdGluZyBhbGwgb3V0c3RhbmRpbmcgcGF5b3V0cwo8aW1nIHNyYz0iLi9pbWcvcHVsbC1wYXltZW50cy83LnBuZyIgYWx0PSI3Ij48L2xpPgo8bGk+Q2hlY2sgdGhlIHBheW91dCB0byBhcHByb3ZlIGFuZCBwYXkgYW5kIGNvbmZpcm0KPGltZyBzcmM9Ii4vaW1nL3B1bGwtcGF5bWVudHMvOC5wbmciIGFsdD0iOCI+PC9saT4KPGxpPllvdSBhcmUgdGhlbiBicm91Z2h0IHRvIHRoZSBub3JtYWwgd2FsbGV0IHVzZXIgaW50ZXJmYWNlIG9mIEJUQ1BheSBTZXJ2ZXI8L2xpPgo8L29sPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgd2FybmluZyI+PHAgY2xhc3M9ImN1c3RvbS1ibG9jay10aXRsZSI+V0FSTklORzwvcD4KPHA+Q2xpY2tpbmcgb24gQ29uZmlybSBzZWxlY3RlZCBwYXlvdXRzIHdpbGwgdXNlIHRoZSBjdXJyZW50IGV4Y2hhbmdlIHJhdGUgb2YgeW91ciB3YWxsZXQncyBzdG9yZSBzZXR0aW5ncy4gVGhlIHJhdGUgaXMgdGhlbiBmaXhlZCwgZXZlbiBpZiB5b3UgZG9uJ3QgY29tcGxldGUgdGhlIHBheW1lbnQuIFBheW1lbnRzIG1hZGUgYXQgYSBsYXRlciB0aW1lIHdpbGwgdXNlIHRoaXMgcHJldmlvdXNseSBjb25maXJtZWQgcmF0ZS48L3A+CjwvZGl2Pgo8aDIgaWQ9ImFkZGl0aW9uYWwtdXNlLWNhc2VzLWZvci10aGUtcHVsbC1wYXltZW50cy1mZWF0dXJlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FkZGl0aW9uYWwtdXNlLWNhc2VzLWZvci10aGUtcHVsbC1wYXltZW50cy1mZWF0dXJlIj4jPC9hPiBBZGRpdGlvbmFsIHVzZSBjYXNlcyBmb3IgdGhlIFB1bGwgUGF5bWVudHMgZmVhdHVyZTwvaDI+CjxwPlRoZSA8c3Ryb25nPlB1bGwgUGF5bWVudCBmZWF0dXJlPC9zdHJvbmc+IGNhbiBiZSB1c2VkIGluIG11bHRpcGxlIGFwcGxpY2F0aW9ucywgdGhlIGZpcnN0IG9uZSBiZWluZyA8Um91dGVyTGluayB0bz0iL1JlZnVuZC8iPlJlZnVuZHM8L1JvdXRlckxpbms+LjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}