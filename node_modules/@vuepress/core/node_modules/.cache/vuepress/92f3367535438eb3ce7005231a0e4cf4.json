{"remainingRequest":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js!/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/WalletSetup.md?vue&type=template&id=e4a33702&","dependencies":[{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/WalletSetup.md","mtime":1617331587413},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/Users/siyuanhe/code/codeminer/docs.opendigitalpay.io/docs/.vuepress/preprocessMarkdown.js","mtime":1617331587385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}